<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE agent SYSTEM 'xmlschemas/domino_10_0_1.dtd'>
<agent name='SendReminderEmails' alias='SendReminderEmails' xmlns='http://www.lotus.com/dxl'
 version='10.0' maintenanceversion='1.0' replicaid='862577A00065A565' hide='web v3'
 publicaccess='false' designerversion='8.5.3' comment='Runs daily at 1:30 AM on 601 - Sends event reminder e-mails to confirmed attendees'
 restrictions='unrestricted' activatable='false'>
<noteinfo noteid='142d6' unid='714BF7E294822498852573800064C79A' sequence='104'>
<created><datetime dst='true'>20071026T142046,98-04</datetime></created>
<modified><datetime dst='true'>20180929T235548,92-05</datetime></modified>
<revised><datetime dst='true'>20160621T121854,74-05</datetime></revised>
<lastaccessed><datetime dst='true'>20180929T235548,92-05</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20180929T235548,92-05</datetime></addedtofile></noteinfo>
<updatedby><name>CN=David Holbrook/OU=White Plains/OU=Contr/O=IBM</name></updatedby>
<wassignedby><name>CN=David Holbrook/OU=White Plains/OU=Contr/O=IBM</name></wassignedby>
<designchange><datetime dst='true'>20160621T121843,28-05</datetime></designchange>
<trigger type='scheduled'>
<schedule type='daily' runlocation='specific' runserver='CN=G01ACXDB601/OU=01/OU=A/O=IBMEXT'>
<starttime><datetime>T013000,00</datetime></starttime></schedule></trigger>
<documentset type='modified'/><code event='options'><lotusscript>'-----------------------------------------------------------------------------------------------------------------
' SendReminderEmails
'-----------------------------------------------------------------------------------------------------------------
'
' This agent is designed to be run on a scheduled basis to send automated reminder
' e-mails to people enrolled in events. 
'
' Author: Core Lan
'
' Revision History:
'
' Date                        		    	By               				Description
' --------                        	  	---               				------------------
' November 2007			Tim Vallely				Comments added and some code reformatting.
'-----------------------------------------------------------------------------------------------------------------

Option Public
Option Declare

Use "Common Functions"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	'------------------------------------------------------------------------------------------------------
     'Description
     '------------------
     'Send reminder e-mails for all active events that have specified that reminder e-mails
	'are to be sent and that today is the date that the reminders are to be sent (based on
	'the settings in the event profile for the event).
	'
     'Parameters
     '-----------------------
     'None.
     '     
     'Return Values
     '-----------------------
     'None.
     '------------------------------------------------------------------------------------------------------   
	
	Const STR_MODULE_NAME = |AGENT: SendReminderEmails|
	
	Dim flgIsMultiLanguageEvent As Boolean
	Dim flgSendReminders As Boolean
	Dim docEventProfile As NotesDocument
	Dim docEnrollment As notesdocument
	Dim docEmailTemplate As NotesDocument	
	Dim myMerger As MergeGenerator
	Dim flgOK As Boolean
	
	Dim strToday As String	
	Dim strEventStartDate As String
	Dim strDateToSendReminders As String
	
	Dim collConfirmedEnrollments As NotesDocumentCollection
	Dim viewActiveEvents As NotesView
	Dim viewConfirmedEnrollments As NotesView
	
	Dim intDaysPriorToEventToSendReminders As Integer
	Dim dtStart As NotesDateTime
	Dim strEmailType As String
	
	Call Debug(STR_MODULE_NAME &amp; |: Started.|)
	
     'Trap errors
	On Error Goto lblError	
	
	'Get handles to the lookup views
	Set viewActiveEvents = g_dbCurr.GetView("vLookupEventsActive")
	Set viewConfirmedEnrollments = g_dbCurr.GetView("vLookupRegistrationsByEventID_Confirmed")
	
	'Create new object to merge text with
	Set myMerger = InitMergeGenerator(g_dbCurr, True, "Registration")
	
	'Get today's date as a string formatted in the same way as the date string used in date comparisons
	strToday = Format$(Today, "MM/DD/YYYY")	
	
	'For each active event, get the associated Event Information document
	Set docEventProfile = viewActiveEvents.GetFirstDocument
	
	While Not docEventProfile Is Nothing	
		
		On Error Goto lblErrorNextEvent
		
		'Get the event start date
		strEventStartDate = Format$(Cdat(docEventProfile.startmonth(0) &amp; "/" &amp; docEventProfile.startday(0) &amp; "/" &amp; docEventProfile.startyear(0) ), "MM/DD/YYYY")	
		
		Call Debug(STR_MODULE_NAME &amp; |: Processing event [| &amp; Cstr(docEventProfile.eventname(0)) &amp; |] with start date [| &amp; strEventStartDate &amp; |].|)
		
		'Assume reminders are not to be sent unless specified in the Event Profile
		flgSendReminders = False
		
		'Find out whether reminders are enabled for this event, and if they are, the number of days prior to the event to send those reminders
		If (flgIsEmailEnabled(docEventProfile, INT_EMAIL_REMINDER)) Then
			flgSendReminders = True
			If (Datatype(docEventProfile.ep_ReminderDays(0)) &lt;&gt; V_DOUBLE) Then
				Error ERR_SYSTEM_ERROR, |Unable to process reminder e-mails for event [| &amp; Cstr(docEventProfile.eventname(0)) &amp; |] with start date [| &amp; strEventStartDate &amp; |].  The number of days before the event to send reminder e-mails was not specified correctly.|
			Else				
				intDaysPriorToEventToSendReminders = Cint(docEventProfile.ep_ReminderDays(0)) * -1	
			End If
			' If event is virtual do not send confirms, the vendor will 
			If (docEventProfile.ep_IsON24(0) = "Yes") Then
				flgSendReminders = False
			End If
		End If
		
		If (flgSendReminders) Then
			
			Call Debug(STR_MODULE_NAME &amp; |: Reminders are enabled for this event and should be sent [| &amp; Cstr(-intDaysPriorToEventToSendReminders) &amp; |] days prior to the event.|)
			
			Set dtStart = New NotesDateTime(strEventStartDate)
			
			'Calculate the date on which to send reminders
			Call dtStart.AdjustDay(intDaysPriorToEventToSendReminders)
			strDateToSendReminders = dtStart.Localtime
			
			Call Debug(STR_MODULE_NAME &amp; |: Reminders should be sent on [| &amp; strDateToSendReminders &amp; |].|)
			
			'If that date is today, then send reminders for this event
			If (strDateToSendReminders = strToday) Then
				
				Call Debug(STR_MODULE_NAME &amp; |: Reminders should be sent today for this event.|)
				
				'Find all confirmed enrollments for the event			
				Set collConfirmedEnrollments = viewConfirmedEnrollments.GetAllDocumentsByKey(docEventProfile.ep_id(0), True)
				
				'If there are any confirmed enrollments for the event, then send reminders
				If (collConfirmedEnrollments.Count &gt; 0) Then
					
					Call Debug(STR_MODULE_NAME &amp; |: Processing [| &amp; Cstr(collConfirmedEnrollments.Count)  &amp; |] confirmed enrollment(s) for this event.|)
					
					Set docEnrollment = collConfirmedEnrollments.GetFirstDocument
					
					'Check whether this is a multi-language event
					flgIsMultiLanguageEvent = flgIsEventMultiLingual(docEventProfile)
					
					'If this is a single language event, get the e-mail template to use here because it will be the
					'same for each enrollment, so it's a waste of time to get it for each enrollment
					If (Not flgIsMultiLanguageEvent) Then
						Set docEmailTemplate = docGetEmailTemplate(INT_EMAIL_REMINDER, docEventProfile, docEnrollment)
					End If
					
					While Not docEnrollment Is Nothing	
						'If this is a multi-language event, the e-mail template to use could be different for each
						'enrollment record (because it depends on the language that the person enrolled in), so get
						'the e-mail template to use for this particular enrollment
						If (flgIsMultiLanguageEvent) Then
							Set docEmailTemplate = docGetEmailTemplate(INT_EMAIL_REMINDER, docEventProfile, docEnrollment)
						End If
						
						If (docEmailTemplate Is Nothing) Then
							On Error Goto lblErrorNext						
							Error ERR_SYSTEM_ERROR, |E-mail not sent for event [| &amp; Cstr(docEventProfile.eventname(0)) &amp; |] with start date [| &amp; strEventStartDate &amp; |].  Unable to find e-mail template required to send e-mail to [| &amp; Cstr(docEnrollment.en_email(0)) &amp; |].|
lblNext:							
							On Error Goto lblErrorNextEvent
						Else
							'Because each enrollment may have a different locale, set the merge generator locale for each enrollment
							'myMerger.currLocale = Cstr(docEnrollment.Locale(0))
							Dim mailDoc As NotesDocument
							Set mailDoc = myMerger.docCreateFormattedEMail(docEnrollment, docEmailTemplate)
							If Not (mailDoc.Save(False, False)) Then
								On Error Goto lblErrorNext2
								Error ERR_SYSTEM_ERROR, |E-mail not sent for event [| &amp; Cstr(docEventProfile.eventname(0)) &amp; |] with start date [| &amp; strEventStartDate &amp; |].  An error occurred when attempting to send e-mail to [| &amp; Cstr(docEnrollment.en_email(0)) &amp; |].|								
lblNext2:
								On Error Goto lblErrorNextEvent
							Else
								strEmailType = Cstr(docEmailTemplate.mt_Category(0))
								
								Select Case strEmailType
									
								Case |Confirmation|:
									docEnrollment.en_DateConfirmationEmailSent = Now()
									
								Case |Reminder|:
									docEnrollment.en_DateReminderEmailSent = Now()
									
								Case |Followup|:
									docEnrollment.en_DateFollowupEmailSent = Now()
									
								Case |Event Cancellation|:
									docEnrollment.en_DateCancellationEmailSent = Now()
									
								Case |Invitation|:
									docEnrollment.in_DateInvitationEmailSent = Now()
									
									'For invitations, change the invitation status to 'Invited' and add a timestamp
									docEnrollment.in_Status = |Invited|
									docEnrollment.in_DateInvited = Now()
									
								Case |Other|:
									docEnrollment.en_DateOtherEmailSent = Now()
									
								Case Else
									Error ERR_SYSTEM_ERROR, |An unknown e-mail type [| &amp; strEmailType &amp; |] was supplied to the function.|	
									
								End Select
								
								Call docEnrollment.Save(True, False)
							End If
							'flgOK = flgSendEmail(docEventProfile, docEnrollment, docEmailTemplate, myMerger, True)	
							'If (Not flgOK) Then
							'	On Error Goto lblErrorNext2				
							'	Error ERR_SYSTEM_ERROR, |E-mail not sent for event [| &amp; Cstr(docEventProfile.eventname(0)) &amp; |] with start date [| &amp; strEventStartDate &amp; |].  An error occurred when attempting to send e-mail to [| &amp; Cstr(docEnrollment.en_email(0)) &amp; |].|								
'lblNext2:							
							'	On Error Goto lblErrorNextEvent
							'End If
						End If
						
						Set docEnrollment = collConfirmedEnrollments.GetNextDocument(docEnrollment)		
					Wend
					
				Else
					Call Debug(STR_MODULE_NAME &amp; |: There are no confirmed enrollments for this event.|)
				End If
			Else
				Call Debug(STR_MODULE_NAME &amp; |: Reminders are NOT scheduled to be sent today for this event.|)			
			End If
		Else
			Call Debug(STR_MODULE_NAME &amp; |: Reminders are NOT enabled for this event.|)
		End If
		
lblNextEvent:
		
		'Get the next active event
		Set docEventProfile = viewActiveEvents.GetNextDocument(docEventProfile)
		
	Wend
	
lblExit:
	
	Call Debug(STR_MODULE_NAME &amp; |: Finished.|)
	
	Exit Sub
	
lblError:
	
	Call Debug(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Call LogError(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Resume lblExit
	
lblErrorNext:
	
	Call Debug(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Call LogError(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Resume lblNext	
	
lblErrorNext2:
	
	Call Debug(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Call LogError(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Resume lblNext2		
	
lblErrorNextEvent:
	
	Call Debug(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Call LogError(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Resume lblNextEvent	
	
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0' agentdata='B2C54715FEE39686D97F2585F5395F00'>
<agentmodified><datetime dst='true'>20160621T131931,71-04</datetime></agentmodified>
<agentrun><datetime dst='true'>20180929T013023,76-04</datetime></agentrun>
<runlog>Started running agent 'SendReminderEmails|SendReminderEmails' on 09/29/2018 01:30:20
Running on new or modified documents: 141966 total
Found 141966 document(s) that match search criteria
Ran LotusScript code
Done running agent 'SendReminderEmails|SendReminderEmails' on 09/29/2018 01:30:23
</runlog></rundata>
<item name='$POID'><datetime>20160309T165349,95-06</datetime></item></agent>

