/** $Id: notice_choice_functions.source.js,v 1.7 2010/11/19 14:36:54 jtalekar Exp $*//* * Copyright (c) 2009 IBM Corporation * Owner: Corporate Webmaster * Documentation is available at *//** * Master JSON Object for Country It has Default OPT-IN or OPT-OUT status and language * @memberOf NoticeChoiceMaster.data *  */	if (typeof NoticeChoiceMaster == "undefined" || NoticeChoiceMaster == null) var NoticeChoiceMaster = {};NoticeChoiceMaster.data={"us":{"status":"OPT_OUT","lang":"en"},"ag":{"status":"OPT_OUT","lang":"en"},"ai":{"status":"OPT_OUT","lang":"en"},"aw":{"status":"OPT_OUT","lang":"en"},"bb":{"status":"OPT_OUT","lang":"en"},"bm":{"status":"OPT_OUT","lang":"en"},"bs":{"status":"OPT_OUT","lang":"en"},"ca":{"status":"OPT_OUT","lang":"en"},"gd":{"status":"OPT_OUT","lang":"en"},"gy":{"status":"OPT_OUT","lang":"en"},"jm":{"status":"OPT_OUT","lang":"en"},"kn":{"status":"OPT_OUT","lang":"en"},"ky":{"status":"OPT_OUT","lang":"en"},"ms":{"status":"OPT_OUT","lang":"en"},"sr":{"status":"OPT_OUT","lang":"en"},"tc":{"status":"OPT_OUT","lang":"en"},"tt":{"status":"OPT_OUT","lang":"en"},"vc":{"status":"OPT_OUT","lang":"en"},"vg":{"status":"OPT_OUT","lang":"en"},"ca":{"status":"OPT_OUT","lang":"fr"},"at":{"status":"OPT_IN","lang":"de"},"ch":{"status":"OPT_IN","lang":"de"},"ch":{"status":"OPT_IN","lang":"fr"},"de":{"status":"OPT_IN","lang":"de"},"dk":{"status":"OPT_IN","lang":"da"},"fi":{"status":"OPT_IN","lang":"fi"},"no":{"status":"OPT_IN","lang":"no"},"se":{"status":"OPT_OUT","lang":"sv"},"gb":{"status":"OPT_OUT","lang":"en"},"ie":{"status":"OPT_IN","lang":"en"},"be":{"status":"OPT_IN","lang":"en"},"nl":{"status":"OPT_IN","lang":"nl"},"fr":{"status":"OPT_OUT","lang":"fr"},"it":{"status":"OPT_IN","lang":"it"},"cy":{"status":"OPT_IN","lang":"en"},"es":{"status":"OPT_IN","lang":"es"},"gr":{"status":"OPT_IN","lang":"el"},"il":{"status":"OPT_IN","lang":"he"},"pt":{"status":"OPT_IN","lang":"pt"},"ar":{"status":"OPT_IN","lang":"es"},"bo":{"status":"OPT_OUT","lang":"es"},"br":{"status":"OPT_OUT","lang":"pt"},"cl":{"status":"OPT_OUT","lang":"es"},"co":{"status":"OPT_OUT","lang":"es"},"do":{"status":"OPT_OUT","lang":"en"},"ec":{"status":"OPT_OUT","lang":"es"},"mx":{"status":"OPT_OUT","lang":"es"},"pe":{"status":"OPT_OUT","lang":"es"},"py":{"status":"OPT_OUT","lang":"es"},"uy":{"status":"OPT_OUT","lang":"es"},"ve":{"status":"OPT_OUT","lang":"es"},"au":{"status":"OPT_IN","lang":"en"},"id":{"status":"OPT_OUT","lang":"en"},"my":{"status":"OPT_OUT","lang":"en"},"ph":{"status":"OPT_OUT","lang":"en"},"sg":{"status":"OPT_IN","lang":"en"},"th":{"status":"OPT_OUT","lang":"en"},"vn":{"status":"OPT_OUT","lang":"en"},"cn":{"status":"OPT_OUT","lang":"zh"},"hk":{"status":"OPT_OUT","lang":"en"},"tw":{"status":"OPT_IN","lang":"zh"},"bd":{"status":"OPT_OUT","lang":"en"},"in":{"status":"OPT_OUT","lang":"en"},"lk":{"status":"OPT_OUT","lang":"en"},"kp":{"status":"OPT_IN","lang":"ko"},"kr":{"status":"OPT_IN","lang":"ko"},"ae":{"status":"OPT_OUT","lang":"en"},"bg":{"status":"OPT_IN","lang":"bg"},"bh":{"status":"OPT_IN","lang":"en"},"cz":{"status":"OPT_IN","lang":"cs"},"dz":{"status":"OPT_IN","lang":"fr"},"ee":{"status":"OPT_IN","lang":"et"},"eg":{"status":"OPT_IN","lang":"en"},"hr":{"status":"OPT_IN","lang":"hr"},"hu":{"status":"OPT_IN","lang":"hu"},"jo":{"status":"OPT_IN","lang":"en"},"kw":{"status":"OPT_IN","lang":"en"},"lb":{"status":"OPT_IN","lang":"en"},"lt":{"status":"OPT_IN","lang":"lt"},"lv":{"status":"OPT_IN","lang":"lv"},"ma":{"status":"OPT_IN","lang":"fr"},"mk":{"status":"OPT_IN","lang":"mk"},"om":{"status":"OPT_IN","lang":"en"},"pk":{"status":"OPT_IN","lang":"en"},"pl":{"status":"OPT_IN","lang":"pl"},"qa":{"status":"OPT_IN","lang":"en"},"ro":{"status":"OPT_IN","lang":"ro"},"rs":{"status":"OPT_IN","lang":"sr"},"me":{"status":"OPT_IN","lang":"sr"},"ru":{"status":"OPT_IN","lang":"ru"},"sa":{"status":"OPT_IN","lang":"en"},"si":{"status":"OPT_IN","lang":"si"},"sk":{"status":"OPT_IN","lang":"sk"},"tn":{"status":"OPT_IN","lang":"fr"},"tr":{"status":"OPT_IN","lang":"tr"},"ua":{"status":"OPT_IN","lang":"uk"},"za":{"status":"OPT_IN","lang":"en"},"ad":{"status":"OPT_IN","lang":"en"},"af":{"status":"OPT_IN","lang":"en"},"al":{"status":"OPT_IN","lang":"en"},"am":{"status":"OPT_IN","lang":"en"},"an":{"status":"OPT_OUT","lang":"en"},"ao":{"status":"OPT_IN","lang":"en"},"as":{"status":"OPT_OUT","lang":"en"},"ax":{"status":"OPT_IN","lang":"en"},"az":{"status":"OPT_IN","lang":"en"},"ba":{"status":"OPT_IN","lang":"en"},"bf":{"status":"OPT_IN","lang":"en"},"bi":{"status":"OPT_IN","lang":"en"},"bj":{"status":"OPT_IN","lang":"en"},"bn":{"status":"OPT_OUT","lang":"en"},"bt":{"status":"OPT_OUT","lang":"en"},"bv":{"status":"OPT_IN","lang":"en"},"bw":{"status":"OPT_IN","lang":"en"},"by":{"status":"OPT_IN","lang":"en"},"bz":{"status":"OPT_OUT","lang":"en"},"cc":{"status":"OPT_OUT","lang":"en"},"cd":{"status":"OPT_IN","lang":"en"},"cf":{"status":"OPT_IN","lang":"en"},"cg":{"status":"OPT_IN","lang":"en"},"ci":{"status":"OPT_IN","lang":"en"},"ck":{"status":"OPT_OUT","lang":"en"},"cm":{"status":"OPT_IN","lang":"en"},"cr":{"status":"OPT_OUT","lang":"en"},"cu":{"status":"OPT_OUT","lang":"en"},"cv":{"status":"OPT_IN","lang":"en"},"cx":{"status":"OPT_OUT","lang":"en"},"dj":{"status":"OPT_IN","lang":"en"},"eh":{"status":"OPT_IN","lang":"en"},"er":{"status":"OPT_IN","lang":"en"},"et":{"status":"OPT_IN","lang":"en"},"fj":{"status":"OPT_OUT","lang":"en"},"fk":{"status":"OPT_IN","lang":"en"},"fm":{"status":"OPT_OUT","lang":"en"},"fo":{"status":"OPT_IN","lang":"en"},"ga":{"status":"OPT_IN","lang":"en"},"ge":{"status":"OPT_IN","lang":"en"},"gf":{"status":"OPT_OUT","lang":"en"},"gg":{"status":"OPT_IN","lang":"en"},"gh":{"status":"OPT_IN","lang":"en"},"gi":{"status":"OPT_IN","lang":"en"},"gl":{"status":"OPT_IN","lang":"en"},"gm":{"status":"OPT_IN","lang":"en"},"gn":{"status":"OPT_IN","lang":"en"},"gp":{"status":"OPT_OUT","lang":"en"},"gq":{"status":"OPT_IN","lang":"en"},"gs":{"status":"OPT_IN","lang":"en"},"gt":{"status":"OPT_OUT","lang":"en"},"gu":{"status":"OPT_OUT","lang":"en"},"gw":{"status":"OPT_IN","lang":"en"},"hm":{"status":"OPT_OUT","lang":"en"},"hn":{"status":"OPT_OUT","lang":"en"},"ht":{"status":"OPT_OUT","lang":"en"},"im":{"status":"OPT_IN","lang":"en"},"io":{"status":"OPT_IN","lang":"en"},"iq":{"status":"OPT_IN","lang":"en"},"ir":{"status":"OPT_IN","lang":"en"},"is":{"status":"OPT_IN","lang":"en"},"je":{"status":"OPT_IN","lang":"en"},"ke":{"status":"OPT_IN","lang":"en"},"kg":{"status":"OPT_IN","lang":"en"},"kh":{"status":"OPT_OUT","lang":"en"},"ki":{"status":"OPT_OUT","lang":"en"},"km":{"status":"OPT_IN","lang":"en"},"kp":{"status":"OPT_OUT","lang":"en"},"kz":{"status":"OPT_IN","lang":"en"},"la":{"status":"OPT_OUT","lang":"en"},"li":{"status":"OPT_IN","lang":"en"},"lr":{"status":"OPT_IN","lang":"en"},"ls":{"status":"OPT_IN","lang":"en"},"lu":{"status":"OPT_IN","lang":"en"},"ly":{"status":"OPT_IN","lang":"en"},"mc":{"status":"OPT_OUT","lang":"en"},"md":{"status":"OPT_IN","lang":"en"},"mg":{"status":"OPT_IN","lang":"en"},"mh":{"status":"OPT_OUT","lang":"en"},"mk":{"status":"OPT_IN","lang":"en"},"ml":{"status":"OPT_IN","lang":"en"},"mm":{"status":"OPT_OUT","lang":"en"},"mn":{"status":"OPT_OUT","lang":"en"},"mo":{"status":"OPT_OUT","lang":"en"},"mp":{"status":"OPT_OUT","lang":"en"},"mq":{"status":"OPT_OUT","lang":"en"},"mr":{"status":"OPT_IN","lang":"en"},"mt":{"status":"OPT_IN","lang":"en"},"mu":{"status":"OPT_IN","lang":"en"},"mv":{"status":"OPT_OUT","lang":"en"},"mw":{"status":"OPT_IN","lang":"en"},"mz":{"status":"OPT_IN","lang":"en"},"na":{"status":"OPT_IN","lang":"en"},"nc":{"status":"OPT_IN","lang":"en"},"ne":{"status":"OPT_IN","lang":"en"},"nf":{"status":"OPT_OUT","lang":"en"},"ng":{"status":"OPT_IN","lang":"en"},"ni":{"status":"OPT_OUT","lang":"en"},"np":{"status":"OPT_OUT","lang":"en"},"nr":{"status":"OPT_OUT","lang":"en"},"nu":{"status":"OPT_OUT","lang":"en"},"nz":{"status":"OPT_IN","lang":"en"},"pa":{"status":"OPT_OUT","lang":"en"},"pf":{"status":"OPT_IN","lang":"en"},"pg":{"status":"OPT_OUT","lang":"en"},"pm":{"status":"OPT_OUT","lang":"en"},"pn":{"status":"OPT_IN","lang":"en"},"pr":{"status":"OPT_OUT","lang":"en"},"ps":{"status":"OPT_IN","lang":"en"},"pw":{"status":"OPT_OUT","lang":"en"},"re":{"status":"OPT_OUT","lang":"en"},"rw":{"status":"OPT_IN","lang":"en"},"sb":{"status":"OPT_OUT","lang":"en"},"sc":{"status":"OPT_IN","lang":"en"},"sd":{"status":"OPT_IN","lang":"en"},"sh":{"status":"OPT_IN","lang":"en"},"sj":{"status":"OPT_IN","lang":"en"},"sl":{"status":"OPT_IN","lang":"en"},"si":{"status":"OPT_IN","lang":"sl"},"sm":{"status":"OPT_IN","lang":"en"},"sn":{"status":"OPT_IN","lang":"en"},"so":{"status":"OPT_IN","lang":"en"},"sp":{"status":"OPT_OUT","lang":"en"},"st":{"status":"OPT_IN","lang":"en"},"sv":{"status":"OPT_OUT","lang":"en"},"sy":{"status":"OPT_IN","lang":"en"},"sz":{"status":"OPT_IN","lang":"en"},"td":{"status":"OPT_IN","lang":"en"},"tf":{"status":"OPT_OUT","lang":"en"},"tg":{"status":"OPT_IN","lang":"en"},"tj":{"status":"OPT_IN","lang":"en"},"tk":{"status":"OPT_OUT","lang":"en"},"tl":{"status":"OPT_OUT","lang":"en"},"tm":{"status":"OPT_IN","lang":"en"},"to":{"status":"OPT_OUT","lang":"en"},"tv":{"status":"OPT_OUT","lang":"en"},"tz":{"status":"OPT_IN","lang":"en"},"ug":{"status":"OPT_IN","lang":"en"},"uz":{"status":"OPT_IN","lang":"en"},"va":{"status":"OPT_IN","lang":"en"},"vi":{"status":"OPT_OUT","lang":"en"},"vu":{"status":"OPT_IN","lang":"en"},"wf":{"status":"OPT_IN","lang":"en"},"ws":{"status":"OPT_OUT","lang":"en"},"ye":{"status":"OPT_IN","lang":"en"},"yt":{"status":"OPT_IN","lang":"en"},"zm":{"status":"OPT_IN","lang":"en"},"zw":{"status":"OPT_IN","lang":"en"},"vn":{"status":"OPT_OUT","lang":"vi"},"cr":{"status":"OPT_OUT","lang":"es"},"jp":{"status":"OPT_IN","lang":"ja"}}		if (typeof(ibmNC) != 'object' || ibmNC == null)		ibmNC = {};			ibmNC.serverUrl="https://www.ibm.com/NoticeNChoice";	ibmNC.jsURL="https://www.ibm.com";		//ibmNC.serverUrl="http://sapphire.webmaster.ibm.com:9080/NoticeNChoice";	//ibmNC.jsURL="https://www.ibm.com";		// global variables for whole script	ibmNC.formLoading=true;	ibmNC.emailEntered = false;	ibmNC.countryChanged = false;	ibmNC.noticeOptionChanged = false;	ibmNC.currentOptStatus;	ibmNC.emailoptInOut;		// page variables used for country		ibmNC.pageCountry;	ibmNC.pageLanguage;	ibmNC.questionType;	ibmNC.pageDesc;	ibmNC.formCountry;	// lables for ids used in the code	ibmNC.labels={		"0":"EMAIL",		"1":"PHONE",		"2":"POSTAL",		"3":"FAX",		"4":"OTHER"	};/** * Function NoticeChoiceInit() to initialize the notice and choice content using Country and Language Meta Tags * @memberOf NoticeChoice * @param None*/ ibmNC.NoticeChoiceInit =	function() {		//ibmNC.pageCountry =  jQuery('meta[name=IBM.Country]').attr("content");	//alert("country is " + ibmCommon.meta.cc);	//alert("language is " + ibmCommon.meta.lc);		//ibmNC.pageLanguage = jQuery('meta[name=DC.Language]').attr("content").substring(0, 2);  	ibmNC.pageCountry =  ibmCommon.meta.cc;	ibmNC.pageLanguage =  ibmCommon.meta.lc;	ibmNC.questionType = jQuery('meta[name=NC.QuestionType]').attr("content");	ibmNC.pageDesc = jQuery('meta[name=NC.PageDesc]').attr("content");	//show loading message	//ibmNC.getLoadingText(jQuery("#privacyid"));	jQuery("#privacyid").html('<p><img src="https://www.ibm.com/i/common/loading.gif"> <b><strong> Loading Privacy Preferences </strong> </b></p>');	//("loading language");	// urls for rest based services and Js files	ibmNC.urlContent=ibmNC.jsURL + "/common/translations/" +ibmNC.pageCountry +"/"+ibmNC.pageLanguage+"/nc_content.js";			// AJAX call to load the country and langauge default privact text. 		jQuery.ajax({			type: "GET",			url: ibmNC.urlContent,			dataType: "script",			success: function(jsonObject){				//alert("loading notice choice language script");							}		});						/*		if(typeof NoticeChoice == "undefined" || NoticeChoice == null){							setTimeout(function () {ibmNC.parseJSON(NoticeChoice.Content,'DEFAULT',ibmNC.questionType,jQuery("#privacyid") );}, 1000);		}else{			ibmNC.parseJSON(NoticeChoice.Content,'DEFAULT',ibmNC.questionType,jQuery("#privacyid") );		}		*/		// using ibmCommon.queue.push function to wait for the content file to load.		ibmCommon.queue.push(function() {return typeof NoticeChoice != "undefined";},			function() {ibmNC.parseJSON(true,NoticeChoice.Content,'DEFAULT',ibmNC.questionType,jQuery("#privacyid") );});		//ibmCommon.queue.waitForElement('NoticeChoice.Content', function() {ibmNC.parseJSON(NoticeChoice.Content,'DEFAULT',ibmNC.questionType,jQuery("#privacyid") );}, true);		}	/** 		 * Function to get the labels for ids 	 * 0 EMAIL 1 PHONE 2 POSTAL 3 FAX 4 OTHER	 * It used global JSON Object ibmNC.labels	 *	 *     * @memberOf NoticeChoice      * @param {String} id Id used to store the option in datbase       */ 	ibmNC.getLabelText = function(id) {				return ibmNC.labels[id];		}	/**      * Function to get the default OPT-IN OPT-OUT status of country it used NoticeChoiceMaster.data JSON Object     * @memberOf NoticeChoice      * @param {String} countryname Name of Country      */ 	ibmNC.getDefaultOptStatus = function (countryname){ 		var optStatus="DEFAULT";						if( typeof(NoticeChoiceMaster.data[countryname]) == 'object' )				optStatus = NoticeChoiceMaster.data[countryname].status;						return optStatus;	}	/**      * Function to get the default Language of country it used NoticeChoiceMaster.data JSON Object     * @memberOf NoticeChoice      * @param {String} countryname Name of Country      */ 	ibmNC.getDefaultLang = function (countryname){ 				var lang="DEFAULT";		 		if( typeof(NoticeChoiceMaster.data[countryname]) == 'object' )				lang = NoticeChoiceMaster.data[countryname].lang;								return lang;	}	/**      * Function to re-load the original porivacy text for the page using meta tag country and language.     * @memberOf NoticeChoice      * @param none     */ 		ibmNC.loadOriginalLang = function (){		var urlContent=ibmNC.jsURL + "/common/translations/" +ibmNC.pageCountry +"/"+ibmNC.pageLanguage+"/nc_content.js";		// AJAX call to get the reuquest using GET SCRIPCT		jQuery.ajax({			  type: "GET",			  url: urlContent,			  dataType: "script",			  success: function(jsonObject) {			  	//alert("loaded original language");			  }		});	}	/**      * Function to parse the privact JSON Object and populate the div tag for privacy. 	 * It uses the Question type, OPT-IN or OPT-OUT content type and populates notice and choice option and its text.	 * It also defaults checks the option choices as per configurations.      * @memberOf NoticeChoice      * @param {String} jsonObject JSON Object for privacy options	 * @param {String} contentType OPT-IN or OPT-OUT or DEFAULT	 * @param {String} questionType Number of questions to be presented (  2 or 4 ) 	 * @param {String} object Target div tag for Privacay	      */ 	ibmNC.parseJSON = function (loadPrechecks,jsonObject,contentType,questionType,object){			    // pointer to move through JSON Object		var cursorText = jsonObject.OptInContent;		ibmNC.currentOptStatus ='OPT_IN';				// Default is nothing but Meta Tag Country and langauge specific Privacy Text		if(contentType == 'DEFAULT'){			var defaulttype= jsonObject.cc_default_status;			//alert(defaulttype);			if(defaulttype == 'OPT_OUT'){				cursorText =jsonObject.OptOutContent;				ibmNC.currentOptStatus ='OPT_OUT';			}		} else if(contentType == 'OPT_OUT'){			cursorText =jsonObject.OptOutContent;			ibmNC.currentOptStatus ='OPT_OUT';		}						//alert(cursorText.preText);		object.html('<p>' + cursorText.preText+'</p>');		var postText = cursorText.postText;				if(questionType== 4){			cursorText = cursorText.fourQuestionApp;		}else{			cursorText = cursorText.twoQuestionApp;		}				var textToInsert = [];		var i = 0;		jQuery.each(cursorText, function(key,value){			var id = value.id;			var label=ibmNC.getLabelText(id);			var postText = value.optionTextPost;			var checked =value.checked;			var preoptionText = value.optionTextPre;						var check_name='NC_CHECK_'+label;			var hidden_name='NC_HIDDEN_'+label;			//alert(check_name);			var tempVar ="" ;			var tempHidden ="" ;			if(checked != "hidden"){				//alert("inside not hidden");								// check if default checked then check the checbox 				if(!(loadPrechecks)){					var hiddenValue='OPT_IN';						if(ibmNC.currentOptStatus =='OPT_IN'){							hiddenValue='OPT_OUT';						}						tempVar = '<input id=' + check_name + ' type=checkbox value=' + id + ' name=' + check_name + ' onClick=" ibmNC.onChangeNCOptionsFunction();" ></input>';						tempHidden = '<input id=' + hidden_name + ' type=hidden value=' + hiddenValue+' name=' + hidden_name + '></input>';								}else {					if(checked == "true" ){						//alert("inside true");						var hiddenValue='OPT_IN';						if(ibmNC.currentOptStatus =='OPT_OUT'){							hiddenValue='OPT_OUT';						}						// added checkbox												// hiddne fields to store the values of permission or suppression						tempHidden = '<input id=' + hidden_name + ' type=hidden value=' + hiddenValue+' name=' + hidden_name + '></input>';						if( id ==0 && ibmNC.emailEntered == true && ibmNC.emailoptInOut == 'OPT_OUT'){							tempVar = '<input id=' + check_name + ' type=checkbox value=' + id + ' name=' + check_name + ' onClick=" ibmNC.onChangeNCOptionsFunction();" ></input>';						}else{							tempVar = '<input id=' + check_name + ' type=checkbox value= ' + id + ' name= ' + check_name + ' checked="checked" onClick="ibmNC.onChangeNCOptionsFunction();"></input>';						}					}					if(checked == "false" ){						//alert("inside false");						var hiddenValue='OPT_IN';						if(ibmNC.currentOptStatus =='OPT_IN'){							hiddenValue='OPT_OUT';						}						tempVar = '<input id=' + check_name + ' type=checkbox value=' + id + ' name=' + check_name + ' onClick=" ibmNC.onChangeNCOptionsFunction();" ></input>';						tempHidden = '<input id=' + hidden_name + ' type=hidden value=' + hiddenValue+' name=' + hidden_name + '></input>';					}				}				//object.append('<p>'+ preoptionText +'</p>' );				var opt =  '<span class="ibm-input-group" style="margin-left: 0">' + tempVar +'<label for="UPDATE">'  + postText + '</label></span><br />' ;						textToInsert[i++]  = opt;				textToInsert[i++]  = tempHidden;			}								});				object.append('<p>' + textToInsert.join('') + '</p>');		object.append('<p>' + postText +'</p>');		jQuery('a[href*="www.ibm.com/privacy"]').attr('target','_blank');	}	/**      * Function to get the opt-in or opt-out status for email entered and accordingle change the text. 	 * @memberOf NoticeChoice      * none     */ 	ibmNC.onChangeEmailFunction = function (emailAddress){	//alert('email entered');				ibmNC.emailEntered = true;		var emailText = jQuery.trim(emailAddress);				// if Country or Notice Choice options are changed them also return.		if(ibmNC.noticeOptionChanged == true){			return true;		}		/*		if(ibmNC.countryChanged == true ){			return true;		}		*/		// check if email is empty and if empty return the call		if(emailText.length < 1 ){			if(ibmNC.countryChanged != true){				var CountryOpt = ibmNC.getDefaultOptStatus(ibmNC.pageCountry);				ibmNC.parseJSON(true,NoticeChoice.Content,CountryOpt,ibmNC.questionType,jQuery("#privacyid") );				ibmNC.emailoptInOut=CountryOpt;			}else{				var formCountryOpt = ibmNC.getDefaultOptStatus(ibmNC.formCountry);				var formLang = ibmNC.getDefaultLang(ibmNC.formCountry);				ibmNC.parseJSON(false,NoticeChoice.Content,formCountryOpt,ibmNC.questionType,jQuery("#privacyid") );				ibmNC.changeFormCountryOptions(ibmNC.formCountry,formLang,formCountryOpt,ibmNC.questionType,jQuery("#privacyid"));				ibmNC.emailoptInOut=CountryOpt;							}						ibmNC.emailEntered = false;						return true;		}				var lookupUrl = ibmNC.serverUrl + "/Controller?country=" + ibmNC.pageCountry + "&language=" + ibmNC.pageLanguage +"&sid=101&emailAddress=" + 			emailText +"&callback=?";				jQuery.getJSON(lookupUrl,function(data){								//alert('OPTSTATUS  ' + data.OPTSTATUS);								var status = data.OPTSTATUS;								if(status==0){					ibmNC.emailoptInOut='OPT_IN';				}else if(status==1){					ibmNC.emailoptInOut='OPT_OUT';				}else if(status==2){					ibmNC.emailoptInOut='NEW';				}else if(status==3){					ibmNC.emailoptInOut='ERROR';					//alert("Please check email");					return false;				}else if(status==4){					ibmNC.emailoptInOut='ERROR';									}else {					ibmNC.emailoptInOut='DEFAULT';				}												if(ibmNC.countryChanged == false ){					var CountryOpt = ibmNC.getDefaultOptStatus(ibmNC.pageCountry);										// if Meta Tag country is defualt OPT-OUT and email entered is opt-out too then do not do anything										if(CountryOpt == 'OPT_OUT' && ibmNC.emailoptInOut == 'OPT_OUT'){											ibmNC.parseJSON(true,NoticeChoice.Content,'OPT_IN',ibmNC.questionType,jQuery("#privacyid") );											}else{						ibmNC.parseJSON(true,NoticeChoice.Content,'DEFAULT',ibmNC.questionType,jQuery("#privacyid") );					}												} else {					var formLang = ibmNC.getDefaultLang(ibmNC.formCountry);							var formCountryOpt = ibmNC.getDefaultOptStatus(ibmNC.formCountry);														//alert(CountryOpt)					//alert(ibmNC.emailoptInOut);					// if Meta Tag country is defualt OPT-OUT and email entered is opt-out too then do not do anything															if(formCountryOpt == 'OPT_OUT' && ibmNC.emailoptInOut == 'OPT_OUT'){											ibmNC.parseJSON(false,NoticeChoice.Content,'OPT_IN',ibmNC.questionType,jQuery("#privacyid") );						ibmNC.changeFormCountryOptions(ibmNC.formCountry,formLang,"OPT_IN",ibmNC.questionType,jQuery("#privacyid"));											}else{						ibmNC.parseJSON(false,NoticeChoice.Content,formCountryOpt,ibmNC.questionType,jQuery("#privacyid") );						ibmNC.changeFormCountryOptions(ibmNC.formCountry,formLang,formCountryOpt,ibmNC.questionType,jQuery("#privacyid"));					}									}								});	}	/**      * Function to check if any notice choise option has been changed or not     * @memberOf NoticeChoice      * @param None      */ 	 ibmNC.onChangeNCOptionsFunction = function(){		ibmNC.noticeOptionChanged = true;	}	/**      * Function to change the privacy text when Form country is changed and its default opt status 	 * does not mathc with MetaTag Counries Default opt Status     * @memberOf NoticeChoice      * @param None      */ 	ibmNC.onChangeCountryFunction = function (country){		ibmNC.countryChanged = true;		var formCountry = country.toLowerCase();		ibmNC.formCountry = country.toLowerCase();		//alert(formCountry);		var formLang = ibmNC.getDefaultLang(formCountry);		//alert(formLang);		var formCountryOpt = ibmNC.getDefaultOptStatus(formCountry);		//alert(formCountryOpt);		var metaCountryOpt = ibmNC.getDefaultOptStatus(ibmNC.pageCountry);		//alert(metaCountryOpt);		// check if option is changed already or email opt status is opt out 		if(ibmNC.noticeOptionChanged == true){			return;		}		if(formLang == 'DEFAULT' || formCountryOpt== 'DEFAULT'){			//alert("No Translation found for " + ibmNC.formCountry);			return;		}		/*		if((ibmNC.emailEntered == true && ibmNC.emailoptInOut == 'OPT_OUT')){						//alert("changed the country " + metaCountryOpt + ' ::: ' + formCountryOpt);			if(formCountryOpt == metaCountryOpt && metaCountryOpt == "OPT_OUT" ){				ibmNC.changeFormCountryOptions(formCountry,formLang,"OPT_IN",ibmNC.questionType,jQuery("#privacyid"));			}else{				ibmNC.changeFormCountryOptions(formCountry,formLang,formCountryOpt,ibmNC.questionType,jQuery("#privacyid"));			}						return;		}				*/						if(formCountryOpt != metaCountryOpt){			//alert("changed the country opposite type");			if(formCountryOpt == "OPT_OUT"){				if(ibmNC.emailEntered == true && ibmNC.emailoptInOut == 'OPT_OUT'){					ibmNC.parseJSON(false,NoticeChoice.Content,'OPT_IN',ibmNC.questionType,jQuery("#privacyid") );					ibmNC.changeFormCountryOptions(formCountry,formLang,"OPT_IN",ibmNC.questionType,jQuery("#privacyid"));				} else{					ibmNC.parseJSON(false,NoticeChoice.Content,'OPT_OUT',ibmNC.questionType,jQuery("#privacyid") );					ibmNC.changeFormCountryOptions(formCountry,formLang,"OPT_OUT",ibmNC.questionType,jQuery("#privacyid"));				}			}			else {				ibmNC.parseJSON(false,NoticeChoice.Content,'OPT_IN',ibmNC.questionType,jQuery("#privacyid") );				ibmNC.changeFormCountryOptions(formCountry,formLang,formCountryOpt,ibmNC.questionType,jQuery("#privacyid"));			}																}else{			if(metaCountryOpt != ibmNC.currentOptStatus){				if(metaCountryOpt == "OPT_OUT"){										if(ibmNC.emailEntered == true && ibmNC.emailoptInOut == 'OPT_OUT'){						ibmNC.parseJSON(false,NoticeChoice.Content,'OPT_IN',ibmNC.questionType,jQuery("#privacyid") );						ibmNC.changeFormCountryOptions(formCountry,formLang,"OPT_IN",ibmNC.questionType,jQuery("#privacyid"));					} else{						ibmNC.parseJSON(false,NoticeChoice.Content,'OPT_OUT',ibmNC.questionType,jQuery("#privacyid") );						ibmNC.changeFormCountryOptions(formCountry,formLang,"OPT_OUT",ibmNC.questionType,jQuery("#privacyid"));					}									}				else {					ibmNC.parseJSON(true,NoticeChoice.Content,'OPT_IN',ibmNC.questionType,jQuery("#privacyid") );					ibmNC.changeFormCountryOptions(formCountry,formLang,metaCountryOpt,ibmNC.questionType,jQuery("#privacyid"));				}			}else{				ibmNC.changeFormCountryOptions(formCountry,formLang,metaCountryOpt,ibmNC.questionType,jQuery("#privacyid"));			}					}			}	/**      * Function to submit the form but before that submit the Notice n Choice options 	 * to restful service using AJAX.      * @memberOf NoticeChoice      * @param None      */ 	ibmNC.submitNCFormFunction = function (emailAddress){				var emailText = jQuery.trim(emailAddress);				// check if email is empty and if empty return the call		if(emailText.length < 1 ){						ibmNC.emailEntered = false;			//alert("Notice Choice Message : Please check email");			return false;		}			if (ibmNC.formLoading != false)		{			//alert(ibmNC.formLoading);			var emailId=0;			var emailOptStatus='';			var otherId1=-9;			var otherOptStatus1='';			var otherId2=-9;			var otherOptStatus2='';			var otherId3=-9;			var otherOptStatus3='';			var otherId4=-9;			var otherOptStatus4='';						// check the language if optpout then checked is suppression else permission			if(ibmNC.currentOptStatus =="OPT_OUT"){				emailId = jQuery("#NC_CHECK_EMAIL").val();								if(jQuery("#NC_CHECK_EMAIL").attr('checked')){					emailOptStatus="OPT_OUT";				}else{					emailOptStatus="OPT_IN";				}									if(jQuery("#NC_CHECK_PHONE").attr('checked') != undefined){					otherId1 = jQuery("#NC_CHECK_PHONE").val();					if(jQuery("#NC_CHECK_PHONE").attr('checked')){						otherOptStatus1="OPT_OUT";					}else{						otherOptStatus1="OPT_IN";					}				}				if(jQuery("#NC_CHECK_POSTAL").attr('checked') != undefined){					otherId2 = jQuery("#NC_CHECK_POSTAL").val();					if(jQuery("#NC_CHECK_POSTAL").attr('checked')){						otherOptStatus2="OPT_OUT";					}else{						otherOptStatus2="OPT_IN";					}				}				if(jQuery("#NC_CHECK_FAX").attr('checked') != undefined){					otherId3 = jQuery("#NC_CHECK_FAX").val();					if(jQuery("#NC_CHECK_FAX").attr('checked')){						otherOptStatus3="OPT_OUT";					}else{						otherOptStatus3="OPT_IN";					}				}				if(jQuery("#NC_CHECK_OTHER").attr('checked') != undefined){					otherId4 = jQuery("#NC_CHECK_OTHER").val();					if(jQuery("#NC_CHECK_OTHER").attr('checked')){						otherOptStatus4="OPT_OUT";					}else{						otherOptStatus4="OPT_IN";					}				}							}else{				emailId = jQuery("#NC_CHECK_EMAIL").val();				if(jQuery("#NC_CHECK_EMAIL").attr('checked')){					emailOptStatus="OPT_IN";				}else{					emailOptStatus="UNCHANGED";					//emailOptStatus="OPT_OUT";				}				if(jQuery("#NC_CHECK_PHONE").attr('checked') != undefined){					otherId1 = jQuery("#NC_CHECK_PHONE").val();					if(jQuery("#NC_CHECK_PHONE").attr('checked')){						otherOptStatus1="OPT_IN";					}else{						otherOptStatus1="OPT_OUT";					}				}				if(jQuery("#NC_CHECK_POSTAL").attr('checked') != undefined){					otherId2 = jQuery("#NC_CHECK_POSTAL").val();					if(jQuery("#NC_CHECK_POSTAL").attr('checked')){						otherOptStatus2="OPT_IN";					}else{						otherOptStatus2="OPT_OUT";					}				}				if(jQuery("#NC_CHECK_FAX").attr('checked') != undefined){					otherId3 = jQuery("#NC_CHECK_FAX").val();					if(jQuery("#NC_CHECK_FAX").attr('checked')){						otherOptStatus3="OPT_IN";					}else{						otherOptStatus3="OPT_OUT";					}				}				if(jQuery("#NC_CHECK_OTHER").attr('checked') != undefined){					otherId4 = jQuery("#NC_CHECK_OTHER").val();					if(jQuery("#NC_CHECK_OTHER").attr('checked')){						otherOptStatus4="OPT_IN";					}else{						otherOptStatus4="OPT_OUT";					}				}			}			// AJAX call to submit the privacy selection to GECS Services			var updatedMessage =ibmNC.pageDesc + " :: Form Country : " + ibmNC.formCountry + " ::  QUESTION TYPE : " + ibmNC.currentOptStatus;			jQuery.getJSON(ibmNC.serverUrl + "/Controller?callback=?",{ 				country: ibmNC.pageCountry, 				language:ibmNC.pageLanguage,				PAGEDESC:updatedMessage,				sid: '102', 				emailAddress: jQuery.trim(emailAddress),				oldEmailStatus: ibmNC.emailoptInOut,				NC_CHECK_EMAIL:emailOptStatus,				NC_ID_EMAIL:emailId,				OLD_NC_CHECK_PHONE:jQuery('#NC_HIDDEN_PHONE').val(),				NC_CHECK_PHONE:otherOptStatus1,				NC_ID_PHONE:otherId1,				OLD_NC_CHECK_POSTAL:jQuery('#NC_HIDDEN_POSTAL').val(),				NC_CHECK_POSTAL:otherOptStatus2,				NC_ID_POSTAL:otherId2,				OLD_NC_CHECK_FAX:jQuery('#NC_HIDDEN_FAX').val(),				NC_CHECK_FAX:otherOptStatus3,				NC_ID_FAX:otherId3,				OLD_NC_CHECK_OTHER:jQuery('#NC_HIDDEN_OTHER').val(),				NC_CHECK_OTHER:otherOptStatus4,				NC_ID_OTHER:otherId4				}, function(data) { 							var status = data.OPTSTATUS;				// status 5 means transaction is successfull.				if(status==5){										jQuery('#NC_HIDDEN_EMAIL').val(ibmNC.setEmailStatus(ibmNC.emailoptInOut,emailOptStatus));					jQuery('#NC_HIDDEN_PHONE').val(ibmNC.setStatus(jQuery('#NC_HIDDEN_PHONE').val(),otherOptStatus1));					jQuery('#NC_HIDDEN_POSTAL').val(ibmNC.setStatus(jQuery('#NC_HIDDEN_POSTAL').val(),otherOptStatus2));					jQuery('#NC_HIDDEN_FAX').val(ibmNC.setStatus(jQuery('#NC_HIDDEN_FAX').val(),otherOptStatus3));					jQuery('#NC_HIDDEN_OTHER').val(ibmNC.setStatus(jQuery('#NC_HIDDEN_OTHER').val(),otherOptStatus4));									}else{					//jQuery('#NC_HIDDEN_EMAIL').val("SUPRESSION");					jQuery('#NC_HIDDEN_EMAIL').val(ibmNC.setEmailStatus(ibmNC.emailoptInOut,emailOptStatus));					jQuery('#NC_HIDDEN_PHONE').val(ibmNC.setStatus(jQuery('#NC_HIDDEN_PHONE').val(),otherOptStatus1));					jQuery('#NC_HIDDEN_POSTAL').val(ibmNC.setStatus(jQuery('#NC_HIDDEN_POSTAL').val(),otherOptStatus2));					jQuery('#NC_HIDDEN_FAX').val(ibmNC.setStatus(jQuery('#NC_HIDDEN_FAX').val(),otherOptStatus3));					jQuery('#NC_HIDDEN_OTHER').val(ibmNC.setStatus(jQuery('#NC_HIDDEN_OTHER').val(),otherOptStatus4));				}	   								// variable used to stop form submission and submit after the Ajax service call returns back.	   				ibmNC.formLoading = false;				//alert("EMAIL STATUS: " + jQuery('#NC_HIDDEN_EMAIL').val() + " PHONE STATUS: " + jQuery('#NC_HIDDEN_PHONE').val() + " POSTAL STATUS: " + jQuery('#NC_HIDDEN_POSTAL').val());				//alert("PHONE STATUS " + jQuery('#NC_HIDDEN_PHONE').val());				//alert("POSTAL STATUS " + jQuery('#NC_HIDDEN_POSTAL').val());				//alert("FAX STATUS " + jQuery('#NC_HIDDEN_FAX').val());				//alert("OTHER STATUS " + jQuery('#NC_HIDDEN_OTHER').val());							// ####################################################################				// TODO move to onSubmit Event Th. D. 04/04/2010				jQuery('input#NC_EMAIL').val(jQuery('input#NC_HIDDEN_EMAIL').val());				jQuery('input#NC_PHONE').val(jQuery('input#NC_HIDDEN_PHONE').val());				jQuery('input#NC_POSTAL').val(jQuery('input#NC_HIDDEN_POSTAL').val());				// ####################################################################				jQuery("#formTag_1").submit();				   			});			return false;		}else{			return true;		}	}	/**      * Function to check the permission supression or unchanged       * @memberOf NoticeChoice      * @param None      */ 	ibmNC.setStatus = function (oldStatus,newStatus){						if((ibmNC.countryChanged == true && ibmNC.getDefaultOptStatus(ibmNC.formCountry) == "OPT_IN") || (ibmNC.countryChanged == false && ibmNC.getDefaultOptStatus(ibmNC.pageCountry) == "OPT_IN") ){				if(newStatus=="OPT_IN"){					return "PERMISSION";				} else {					if(oldStatus=="OPT_OUT" && newStatus=="OPT_IN"){						return "PERMISSION";					}					if(oldStatus=="OPT_IN" && newStatus=="OPT_OUT"){						return "SUPRESSION";					}										if(oldStatus=="OPT_OUT" && newStatus=="OPT_OUT"){						return "SUPRESSION";					}					if(oldStatus=="OPT_IN" && newStatus=="OPT_IN"){						return "PERMISSION";					}					if(oldStatus=="NEW" && newStatus=="OPT_OUT"){						return "UNCHANGED";					}					if(oldStatus=="NEW" && newStatus=="OPT_IN"){						return "PERMISSION";					}					if(oldStatus=="DEFAULT" || oldStatus=="ERROR"){						return "SUPRESSION";					}					if(oldStatus == "undefined" || oldStatus == null){												return "SUPRESSION";					}				}			} else{								if(newStatus =="OPT_IN"){					return "PERMISSION";				}else{					return "SUPRESSION";				}			}									}	ibmNC.setEmailStatus = function (oldStatus,newStatus){						if((ibmNC.countryChanged == true && ibmNC.getDefaultOptStatus(ibmNC.formCountry) == "OPT_IN") || (ibmNC.countryChanged == false && ibmNC.getDefaultOptStatus(ibmNC.pageCountry) == "OPT_IN") ){								if(newStatus=="OPT_IN"){					return "PERMISSION";				}				else{					if(oldStatus=="OPT_OUT" && newStatus=="OPT_IN"){						return "PERMISSION";					}					if(oldStatus=="OPT_IN" && newStatus=="OPT_OUT"){						return "UNCHANGED";					}					if(oldStatus=="OPT_OUT" && newStatus=="UNCHANGED"){						return "UNCHANGED";					}					if(oldStatus=="OPT_IN" && newStatus=="UNCHANGED"){						return "UNCHANGED";					}					if(oldStatus=="OPT_OUT" && newStatus=="OPT_OUT"){						return "UNCHANGED";					}					if(oldStatus=="OPT_IN" && newStatus=="OPT_IN"){						return "PERMISSION";					}					if(oldStatus=="NEW" && newStatus=="OPT_OUT"){						return "UNCHANGED";					}					if(oldStatus=="NEW" && newStatus=="UNCHANGED"){						return "UNCHANGED";					}					if(oldStatus=="NEW" && newStatus=="OPT_IN"){						return "PERMISSION";					}					if(oldStatus=="DEFAULT" || oldStatus=="ERROR"){						return "UNCHANGED";					}					if(oldStatus == "undefined" || oldStatus == null){												return "UNCHANGED";					}				}			} else{								if(newStatus =="OPT_IN"){					return "PERMISSION";				}else{					return "SUPRESSION";				}											}									}		/**      * Function to change the default selection of privacy options depending on form country 	 * @memberOf NoticeChoice      * @param {String} formCountry Form Country 	 * @param {String} formLang    Form Language	 * @param {String} contentType OPT-IN or OPT-OUT or DEFAULT	 * @param {String} questionType Number of questions to be presented (  2 or 4 ) 	 * @param {String} object Target div tag for Privacay     */ 	 ibmNC.changeFormCountryOptions = function(formCountry,formLang,contentType,questionType,object){				var urlContent=ibmNC.jsURL + "/common/translations/" +formCountry +"/"+formLang+"/nc_content.js";				jQuery.ajax({			  type: "GET",			  url: urlContent,			  dataType: "script",			  			  success: function(jsonObject) { 				//alert("in success");				jsonObject=NoticeChoice.Content;								//alert(jsonObject.cc_name);				//alert(formCountry);								var cursorText = jsonObject.OptInContent;				//alert(cursorText);				ibmNC.currentOptStatus ='OPT_IN';												if(contentType == 'DEFAULT'){					var defaulttype= jsonObject.cc_default_status;					//alert(defaulttype);					if(defaulttype == 'OPT_OUT'){						cursorText =jsonObject.OptOutContent;						ibmNC.currentOptStatus ='OPT_OUT';					}				} else if(contentType == 'OPT_OUT'){					cursorText =jsonObject.OptOutContent;					ibmNC.currentOptStatus ='OPT_OUT';				}				//alert(ibmNC.currentOptStatus);				if(questionType== 4){					cursorText = cursorText.fourQuestionApp;				}else{					cursorText = cursorText.twoQuestionApp;				}				jQuery.each(cursorText, function(key,value){					var id = value.id;					var label = ibmNC.getLabelText(id);					var checked =value.checked;					//alert('for label ' + label + ' checked is ' + checked);					var check_name='NC_CHECK_'+label;					var hidden_name='NC_HIDDEN_'+label;					if(checked == "true" ){														var hiddenValue='OPT_IN';							if(ibmNC.currentOptStatus =='OPT_OUT'){								hiddenValue='OPT_OUT';							}							//alert("inside true" + hiddenValue);							jQuery("#" + hidden_name).val(hiddenValue);														if( id ==0 && ibmNC.emailEntered == true && ibmNC.emailoptInOut == 'OPT_OUT'){								jQuery("#" + check_name).attr('checked',false);							}else{								jQuery("#" + check_name).attr('checked',true);							}													}						if(checked == "false" ){							//alert("inside false");							var hiddenValue='OPT_IN';							if(ibmNC.currentOptStatus =='OPT_IN'){								hiddenValue='OPT_OUT';							}							//alert("inside false" + hiddenValue);							jQuery("#" + hidden_name).val(hiddenValue);							jQuery("#" + check_name).attr('checked',false);						}				});				ibmNC.loadOriginalLang();			}		});	}