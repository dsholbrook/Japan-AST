'++LotusScript Development Environment:2:5:(Options):0:66
Option Public

'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Sub attachments(atype As String)
Declare Function fillArray(col As notesdocumentcollection) As Variant
Declare Function getFileNames(sFileNames As Variant) As Variant
Declare Sub processCancel(thisdoc As notesdocument)
Declare Sub processOK(session As notessession, db As notesdatabase, thisdoc As notesdocument)
Declare Sub setupAuthors(thisdoc As NotesDocument)

'++LotusScript Development Environment:2:5:(Declarations):0:2
Dim attachmentdb1, attachmentdb2, attachmentdbpath As String

'++LotusScript Development Environment:2:2:attachments:1:8
Sub attachments(atype As String)
	Dim session As New notessession
	Dim attachdb As NotesDatabase
	Dim db As NotesDatabase
	Dim view As notesview
	Dim ws As New NotesUIWorkspace
	Dim uidoc As NotesUIdocument
	Dim doc As NotesDocument
	Dim thisdoc As NotesDocument
	Dim adoc As NotesDocument
	Dim refid As String, regid As String, dockey As String
	Dim col As notesdocumentcollection
	Dim arrAttachments As Variant
	Dim whichone As String
	Dim fromwhere As Variant
	Dim success As Variant
	
	Set db = session.CurrentDatabase
		
	Dim profDoc As NotesDocument
	Set profDoc = db.GetProfileDocument("fProfile")
	
	If Not(profDoc Is Nothing) Then
		attachmentdb1 = profDoc.dp_CTEBAAttachmentsServer(0)
		attachmentdb2 = "" '"D25DBW84/WWE/D25EXT"
		attachmentdbpath = profDoc.dp_CTEBAAttachmentsFilename(0)
	Else
		Print "Unable to load profile"
		attachmentdb1 = "B25WCIDBW07/WWE/D25EXT"
		attachmentdb2 = "B25WCIDBW08/WWE/D25EXT"
		attachmentdbpath = "cteba\ctebaattach.nsf"
	End If

	On Error Goto ErrHandler
	
	Set attachdb = session.GetDatabase(attachmentdb1,attachmentdbpath)
	
	If Not (attachdb.IsOpen) Then
		Set attachdb = session.GetDatabase(attachmentdb2,attachmentdbpath)
		If Not (attachdb.IsOpen) Then
			Print ""
			Msgbox "Sorry, you must have an internet connection in order to use this functionality.", 0 + 16, "Attachments"
			Exit Sub			
		End If
	End If
	Print "attachment database open on " + attachdb.Server
	
	Set uidoc = ws.CurrentDocument
	Set doc = uidoc.Document
	refid = doc.ep_id(0)
	eventname$ = doc.ConfName(0) 
	sponsor_bu_pri$ = doc.sponsor_bu_pri(0)
	regid = doc.regid(0) 
	docserver$ = db.Server 
	docpath$= db.FilePath 
	
	'In this case we ask the user about the attachment
	Set view = attachdb.getview("attgrpid")
	dockey = refid & "~" & regid
	Set col = view.getalldocumentsbykey(dockey, True)
	
	arrAttachments = fillArray(col)
	
	whichone = ws.Prompt( PROMPT_OKCANCELLIST, "Attachment(s)", "Please select an option from the list", arrAttachments(0), arrAttachments )
	
	If whichone <> "" Then						
		
		If whichone = "<<NEW ATTACHMENT>>" Then
			Set thisdoc = attachdb.CreateDocument
			thisdoc.form = "tmpattachment"
			thisdoc.deletestatus = "Yes"
			thisdoc.uniqueattachmentid = ""
			thisdoc.referenceid = refid
			thisdoc.regid = regid$
			thisdoc.filetype = "CTEBA"
			thisdoc.eventname = eventname$
			thisdoc.sourceserver = docserver$
			thisdoc.sourcepath = docpath$
			thisdoc.sponsor_bu_pri = sponsor_bu_pri$
			
			Call setupAuthors(thisdoc)

			If atype="cteba" Then
				thisdoc.cteba = "Yes"
			End If

			success =  thisdoc.Computewithform(False, False)
			'Print "saving thisdoc"
			Call thisdoc.save(False, True)	
		Else			'open attachment document
			fromwhere = Instr(whichone, "####")
			id$ = Mid(whichone,fromwhere + 4, Len(whichone) - (fromwhere + 3))
			Set view = attachdb.getview("bydocid")
			Set adoc = view.getdocumentbykey(id$, True)
			Set thisdoc = attachdb.CreateDocument
			thisdoc.form = "tmpattachment"
			thisdoc.deletestatus = "Yes"
			thisdoc.uniqueattachmentid = adoc.uniqueattachmentid(0)
			thisdoc.referenceid = adoc.referenceid(0)
			thisdoc.regid = adoc.regid(0)
			thisdoc.filetype = "CTEBA"
			thisdoc.eventname = eventname$
			thisdoc.sourceserver = docserver$
			thisdoc.sourcepath = docpath$
			thisdoc.sponsor_bu_pri = sponsor_bu_pri$
			thisdoc.filedescription = adoc.filedescription(0)
			thisdoc.filenames = adoc.filenames
			thisdoc.tmpdocid = id$
			
			Set rtitem = New NotesRichTextItem(thisdoc, "filebody")
			Set itembody = adoc.GetFirstItem("filebody")
			If Not itembody Is Nothing Then
				Call itembody.CopyItemToDocument( thisdoc, "filebody" )
			End If

			Call setupAuthors(thisdoc)

			If atype="cteba" Then
				thisdoc.cteba = "Yes"
			End If
			
			success =  thisdoc.Computewithform(False, False)
			Call thisdoc.save(False, True)	
		End If				'If whichone = "<<NEW ATTACHMENT>>" Then
		
		Continue =  ws.DialogBox("dlgattachment", True, True, False, False, False, False, "Attachment(s)", thisdoc, False)
		If Continue Then
			Call processOK(session, db, thisdoc)
		Else
			Call processCancel(thisdoc)
		End If
	End If					'	If whichone <> "" Then						

	Exit Sub
	
ErrHandler:
	'errors occurring when user clicks cancel...do not want to solve it this way but in an attempt to 
	'temporarily alleviate the problem I have added this Error Handler - Chris Negron 04/21/2004
	Resume Next
End Sub



'++LotusScript Development Environment:2:1:fillArray:1:8
Function fillArray(col As notesdocumentcollection) As Variant
	
	
	Dim desc As String
	Dim docid As String
	Dim k As Integer
	Dim arr() As String
	Dim ttoken As String
	Dim doc As notesdocument
	
	Redim Preserve arr(0)
	arr(0) = "<<NEW ATTACHMENT>>"
	
	If col.count > 0 Then
		k = 1
		For i = 1 To col.count
			Set doc = col.GetNthDocument( i )
			desc = doc.filedescription(0)
			docid = doc.docid(0)
			ttoken = desc + Space(150) + "####" + docid
			Redim Preserve arr(0 To k)
			arr(k) = ttoken
			k = k + 1
		Next
	End If
	fillArray = arr
End Function

'++LotusScript Development Environment:2:1:getFileNames:1:8
Function getFileNames(sFileNames As Variant) As Variant
	Dim arr() As String
	Dim isarr As Variant
	Dim pos As Integer
	
	isarr = False
	pos = 0
	Forall n In sFileNames.values
		If n <> "" Then
			Redim Preserve arr(0 To pos) As String
			arr(pos) = n
			isarr = True
		End If
	End Forall
	If isarr Then
		getFileNames = arr
	Else
		getFileNames = ""
	End If
End Function

'++LotusScript Development Environment:2:2:processCancel:1:8
Sub processCancel(thisdoc As notesdocument)
	'thisdoc.DeleteFlag = "1"
	'Call thisdoc.save(False, True)
	'Call thisdoc.remove(True)
	
End Sub

'++LotusScript Development Environment:2:2:processOK:1:8
Sub processOK(session As notessession, db As notesdatabase, thisdoc As notesdocument)
	
	Dim attachdb As NotesDatabase
	Dim view As notesview
	Dim adoc As notesdocument
	Dim nitem As NotesItem
	Dim fileNames As Variant
	Dim itembody As NotesItem
	
	tmpdocid$ = thisdoc.tmpdocid(0)
	'Print "in Process OK code"
	uniqueattachmentid$ = thisdoc.uniqueattachmentid(0)
	If uniqueattachmentid$ = "" Then		'new doc
		Set attachdb = session.GetDatabase(attachmentdb1,attachmentdbpath)
		'Set view = attachdb.getview("attbyuniqueid")
		Set adoc = attachdb.CreateDocument
		adoc.Form = "attachment"
		adoc.deletestatus = "No"
		adoc.filedescription = thisdoc.filedescription(0)
		adoc.filetype = thisdoc.filetype(0)
		adoc.referenceid = thisdoc.referenceid(0)
		adoc.regid = thisdoc.regid(0)
		adoc.eventname = thisdoc.eventname(0)
		adoc.eventtype = thisdoc.eventtype(0)
		adoc.l_geo = thisdoc.l_geo(0)
		adoc.sponsor_bu_pri = thisdoc.sponsor_bu_pri(0)
		adoc.sector = thisdoc.sector(0)
		adoc.industry = thisdoc.industry(0)
		adoc.fileNames = thisdoc.filenames
		'Print "new attachment error"
		'code to reload backend document in order to get the rtitem, otherwise rtitem will be empty
		Set view = attachdb.getview("admintmpattachmentsdocs")
		'Print "got view " + view.Name
		Set thisdoc = view.getdocumentbykey(tmpdocid$,True)
		Print "got bg doc" 
		If thisdoc Is Nothing Then
			Messagebox "Sorry, there was a problem saving the document. Please contact the EST Administrator at Eventsol@us.ibm.com.(attachment error 1)", 64 + MB_OK, "Attachment(s)"
			Exit Sub
		End If
		'end of code to reload....
		
		Set rtitem = New NotesRichTextItem(adoc, "filebody")
		Set itembody = thisdoc.GetFirstItem("filebody")
		If Not itembody Is Nothing Then
			Call itembody.CopyItemToDocument( adoc, "filebody" )
		End If		
		Call setupAuthors(adoc)
		
		success =  adoc.Computewithform(False, False)
		
		'Add user name in GRPAuthor field
		Set nitem = adoc.GetFirstItem("GRPAuthor")
		If nitem Is Nothing Then
			Set nitem = New NotesItem(adoc, "GRPAuthor", session.Username)
			nitem.IsSummary = True
			nitem.IsNames = True
			nitem.IsAuthors = True
		End If
				
	Else											'find existing one
		Set attachdb = session.GetDatabase(attachmentdb1,attachmentdbpath)
		Set view = attachdb.getview("attbyuniqueid")
		Set adoc = view.GetDocumentbyKey(uniqueattachmentid$, True)
		adoc.deletestatus = "No"
		adoc.filedescription = thisdoc.filedescription(0)
		adoc.filetype = thisdoc.filetype(0)
		adoc.eventname = thisdoc.eventname(0)
		adoc.eventtype = thisdoc.eventtype(0)
		adoc.l_geo = thisdoc.l_geo(0)
		adoc.sponsor_bu_pri = thisdoc.sponsor_bu_pri(0)
		adoc.sector = thisdoc.sector(0)
		adoc.industry = thisdoc.industry(0)
		adoc.fileNames = thisdoc.filenames
		
		'code to reload backend document in order to get the rtitem, otherwise rtitem will be empty
		Set view = attachdb.getview("admintmpattachmentsdocs")
		Set thisdoc = view.getdocumentbykey(tmpdocid$,True)
		If thisdoc Is Nothing Then
			Messagebox "Sorry, there was a problem saving the document. Please contact the EST Administrator at Eventsol@us.ibm.com. (attachment error 2)", 64 + MB_OK, "Attachment(s)"
			Exit Sub
		End If
		'end of code to reload....
		
		Set aitembody = adoc.GetFirstItem( "filebody" )
		Set itembody = thisdoc.GetFirstItem( "filebody" )
		If Not itembody Is Nothing Then
			Call aitembody.remove
			Call itembody.CopyItemToDocument( adoc, "filebody" )	
		Else
			Call aitembody.remove
		End If
		Call setupAuthors(adoc)
		
		success =  adoc.Computewithform(False, False)
		
		'Add user name in GRPAuthor field
		Set nitem = adoc.GetFirstItem("GRPAuthor")
		If nitem Is Nothing Then
			Set nitem = New NotesItem(adoc, "GRPAuthor", session.Username)
			nitem.IsSummary = True
			nitem.IsNames = True
			nitem.IsAuthors = True
		End If
				
	End If
	
	Call adoc.save(False, True)
	'thisdoc.DeleteFlag = "1"
	'Call thisdoc.save(False, True)
	'Call thisdoc.remove(True)
End Sub

'++LotusScript Development Environment:2:2:setupAuthors:1:8
Sub setupAuthors(thisdoc As NotesDocument)
	Dim s As New NotesSession
	
	Dim anames(4) As String
	anames(0) = "[Admin]"
	anames(1) = "[AllReaders]"
	anames(2) = "[GPJReaders]"
	anames(3) = "[AllAuthors]"
	anames(4) = s.UserName
	
	Set aitem = thisdoc.GetFirstItem("Author")
	If aitem Is Nothing Then
		Set aitem = New NotesItem(thisdoc, "Author", anames)
	Else
		aitem.Values = anames
	End If
	aitem.IsSummary = True
	aitem.IsNames = True
	aitem.IsAuthors = True
End Sub