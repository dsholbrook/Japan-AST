<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE agent SYSTEM 'xmlschemas/domino_10_0_1.dtd'>
<agent name='(Submit Enrollmentv18)' alias='(Submit Enrollmentv18)' xmlns='http://www.lotus.com/dxl'
 version='10.0' maintenanceversion='1.0' replicaid='862577A00065A565' hide='v3'
 publicaccess='false' designerversion='8.5.3' restrictions='unrestricted'>
<noteinfo noteid='6282e' unid='7B0E2C484BFF4FB98525817600079EA9' sequence='37'>
<created><datetime dst='true'>20170807T212313,69-04</datetime></created>
<modified><datetime>20190116T194705,30-06</datetime></modified>
<revised><datetime>20190116T194705,29-06</datetime></revised>
<lastaccessed><datetime>20190116T194705,30-06</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20180930T002400,14-05</datetime></addedtofile></noteinfo>
<updatedby><name>CN=David Holbrook/OU=White Plains/OU=Contr/O=IBM</name></updatedby>
<wassignedby><name>CN=David Holbrook/OU=White Plains/OU=Contr/O=IBM</name></wassignedby>
<designchange><datetime>20190116T194705,28-06</datetime></designchange>
<trigger type='agentlist'/>
<documentset type='runonce'/><code event='options'><lotusscript>'-----------------------------------------------------------------------------------------------------------------
' SubmitEnrollment
'-----------------------------------------------------------------------------------------------------------------
'
' This agent is designed to be called from the WebQuerySave event of the "xp_v18enrollall" form.
' The agent checks whether the enrollment is a duplicate and if it is redirects the user to
' the duplicatemsg page.  If the enrollment is not a duplicate, the enrollment is saved, a
' confirmation email is sent and the user is redirected to the confirmationmsg page.
'
' Author: Core Lan
'
' Revision History:
'
' Date              By               	Description
' --------          ---               	------------------
' April 17 2007		Tim Vallely			Comments added and some code reformatting.
' 25 Oct 2010		David Holbrook		Added new HTML/MIME E-mail template functionality.
'-----------------------------------------------------------------------------------------------------------------

Option Public
Option Declare

Use "Common Functions"
Uselsx "*javacon"
Use "GRP_ON24"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	'------------------------------------------------------------------------------------------------------
	'Description
	'------------------
	'Save an enrollment.
	'
	'Parameters
	'-----------------------
	'None.
	'     
	'Return Values
	'-----------------------
	'None.
	'------------------------------------------------------------------------------------------------------   
	
	Const STR_MODULE_NAME = |AGENT: SubmitEnrollmentv18|
	Const STR_TEMPLATE = "Confirmation"
	
	Dim s As New NotesSession
	Dim docEnrollment As NotesDocument
	Dim docEventProfile As NotesDocument
	Dim docEmailTemplate As NotesDocument
	Dim strEventID As String
	Dim strLocale As String
	Dim strInvID As String
	Dim strInvEmail As String
	Dim strURL As String, canisterID As String
	Dim flgOk As Boolean
	Dim docMIQuestionSetLookup As NotesDocument
	Dim intCurrQuestion As Integer
	Dim strScript As String
	Dim strQuestionSetID As String
	Dim myMerger As MergeGenerator
	Dim doc_regProfile As NotesDocument
	Dim d As Integer
	Dim item As NotesItem
	Dim strKey As String
	Dim strEmailType As String
	Dim strEventStartDate As String
	
	'Call EnableDebug(STR_MODULE_NAME)
	Call Debug(STR_MODULE_NAME &amp; |: Started.|)
	
	'Trap errors
	On Error Goto lblError	
	
	'Get the enrollment document being submitted
	Set docEnrollment = s.DocumentContext  
	
	'Get the event ID and locale
	strEventID = Ucase$(docEnrollment.ep_id(0))
	strLocale  = docEnrollment.Locale(0)	
	
	'AJ 05/14/2012 - new code to insure unique regid and IORDNUM
	docEnrollment.regid = createRegID(docEnrollment)
	canisterID = g_docDbProfile.dp_CanisterID(0)
	docEnrollment.IORDNUM = canisterID &amp; |-| &amp; strEventID &amp; |-| &amp; docEnrollment.regid(0)
	
	If Trim(docEnrollment.regid(0)) = "" Then
		docEnrollment.SaveOptions = |0|
		Error ERR_SYSTEM_ERROR, STR_MODULE_NAME &amp; |Aborting Submit RegID is Null: docEnrollment.regid(0) ='| &amp; docEnrollment.regid(0) &amp; |'.|
	End If
	
	
	'Th.D. 2011.04.17: suppress any JS undefined result being stored int MATTACT and CONT, causing issues in MAT
	If Trim(docEnrollment.en_MATTACT(0)) = "undefined" Then
		Call LogError(STR_MODULE_NAME &amp; |: Not a Valid MATTACT value: "undefined" | &amp; docEnrollment.en_Email(0))
		docEnrollment.en_MATTACT = ""
	End If
	
	If Trim(docEnrollment.en_CONT(0)) = "undefined" Then
		Call LogError(STR_MODULE_NAME &amp; |: Not a Valid en_CONT value: "undefined"|)
		docEnrollment.en_CONT = ""
	End If
	
	If Trim(docEnrollment.WTacticCode(0)) = "" Or Trim(docEnrollment.WTacticCode(0)) = "undefined" Then
		docEnrollment.WTacticCode = "NA"
	End If
	
	'AJ - 06/23/2011 - catch any state fields with the value of undefined
	If Trim(docEnrollment.en_state(0)) = "undefined" Then
		Call LogError(STR_MODULE_NAME &amp; |: Not a Valid en_state value: "undefined"|)
		docEnrollment.en_state = ""
	End If
	
	'AJ 10/12/2011 - catch any 'Select' values in the prefix field
	If docEnrollment.en_prefix(0) = docEnrollment.lc_Select(0) Then
		'Call LogError(STR_MODULE_NAME &amp; |: Not a Valid en_prefix value: | &amp; docEnrollment.en_prefix(0))
		docEnrollment.en_prefix = ""
	End If
	
	'Th.D Add a trim to attendee Type to avoid miscategorizations in views and agents
	docEnrollment.en_attendeetype = Trim(docEnrollment.en_attendeetype(0))
	docEnrollment.EN_ATTENDEETYPE_TRANS = Trim(docEnrollment.EN_ATTENDEETYPE_TRANS(0))
	
	If (docEnrollment.en_First(0) = || Or docEnrollment.en_Last(0) = || Or docEnrollment.en_Email(0) = || Or docEnrollment.en_CompanyName(0) = ||) Then
		docEnrollment.SaveOptions = |0|
		Error ERR_SYSTEM_ERROR, STR_MODULE_NAME &amp; |: Aborting Submit, not a Valid core field value: en_First='| &amp; docEnrollment.en_first(0) &amp; |', en_last='| &amp; docEnrollment.en_last(0) &amp; |', en_email='| &amp; docEnrollment.en_email(0) &amp; |', en_CompanyName='| &amp; docEnrollment.en_CompanyName(0) &amp; |'.|
	End If
	
	
	'Fix for FTP file name for Telephone as per Jamie
	Dim strNC_PHONE As String
	Dim strNC_EMAIL As String
	Dim strNC_POSTAL As String
	
	strNC_PHONE  = Trim(docEnrollment.NC_HIDDEN_PHONE(0))
	strNC_EMAIL  = Trim(docEnrollment.NC_HIDDEN_EMAIL(0))
	strNC_POSTAL = Trim(docEnrollment.NC_HIDDEN_POSTAL(0))
	
	'Validate also that the web service returned a correct value for privacy, not a number and/or an e-mail.
	'If no valid value returned then SUPPRESS as per Kim Atherton. 05/17/2010
	
	' NC Phone
	If(strNC_PHONE="SUPRESSION" Or strNC_PHONE="PERMISSION" Or strNC_PHONE="UNCHANGED" Or strNC_PHONE="SUPPRESSION") Then
		'docEnrollment.NC_HIDDEN_TELE = docEnrollment.NC_HIDDEN_PHONE(0) ' Fixes mismatch of term between Web service and Unica/Siebel. WS calls it PHONE and CRM calls it TELE
	Else
		'Next line is to document if non compliant NC fields is also not blank, which would show a deliberate attempt at hacking not just a Privacy web service failure.
		If Trim(strNC_PHONE) &lt;&gt; "" Then
			'docEnrollment.SaveOptions = |0|
			Error ERR_SYSTEM_ERROR, STR_MODULE_NAME &amp; |: In Event: | &amp; strEventID &amp; |. Not a Valid NC_PHONE value: '| &amp; strNC_PHONE &amp; |' : e-mail: | &amp; docEnrollment.en_email(0)
		End If
	End If
	
	' NC EMAIL
	If(strNC_EMAIL="SUPRESSION" Or strNC_EMAIL="PERMISSION" Or strNC_EMAIL="UNCHANGED" Or strNC_EMAIL="SUPPRESSION") Then
		' This space intentionally left blank due to fix only relevant to Phone
	Else
		'Next line is to document if non compliant NC fields is also not blank, which would show a deliberate attempt at hacking not just a Privacy web service failure.
		If Trim(strNC_EMAIL) &lt;&gt; "" Then
			'veOptions = |0|
			Error ERR_SYSTEM_ERROR, STR_MODULE_NAME &amp; |: In Event: | &amp; strEventID &amp; |. Not a Valid NC_EMAIL value: '| &amp; strNC_EMAIL &amp; |' : e-mail: | &amp; docEnrollment.en_email(0)
		End If
	End If
	
	' NC POSTAL
	If(strNC_POSTAL="SUPRESSION" Or strNC_POSTAL="PERMISSION" Or strNC_POSTAL="UNCHANGED" Or strNC_POSTAL="SUPPRESSION") Then
		' This space intentionally left blank due to fix only relevant to Phone
	Else
		'Next line is to document if non compliant NC fields is also not blank, which would show a deliberate attempt at hacking not just a Privacy web service failure.
		If Trim(strNC_POSTAL) &lt;&gt; "" Then
			'docEnrollment.SaveOptions = |0|
			Error ERR_SYSTEM_ERROR, STR_MODULE_NAME &amp; |: In Event: | &amp; strEventID &amp; |. Not a Valid NC_POSTAL value: '| &amp; strNC_POSTAL &amp; |' : e-mail: | &amp; docEnrollment.en_email(0)
		End If
	End If
	
	'If the enrollment is a duplicate then display the duplicate error page.
	If (flgIsDuplicateEnrollment(docEnrollment)) Then
		docEnrollment.SaveOptions = "0"  'stop the current save of the submitted document
		Call Debug(STR_MODULE_NAME &amp; |: Duplicate registration prevented for [| &amp; Cstr(docEnrollment.en_email(0)) &amp; |].|)	
		strURL = g_strWebPath &amp; |/duplicatemsg.xsp?open&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale
		If (strInvID &lt;&gt; ||) Then
			strURL = strURL &amp; |&amp;invid=| &amp; strInvID
		End If
		Call Debug(STR_MODULE_NAME &amp; |: Redirecting to [| &amp; strURL &amp; |].|)	
		Print |[| &amp; strURL &amp; |]|
		Goto lblExit
	End If	
	
	'Make sure right form is used
	docEnrollment.Form = "enrollall" 
	
	'Set the locale
	docEnrollment.LocaleName = strGetLocaleName(strLocale)
	
	' added by rws 2010.06.18, en_originCreated or en_originUpdated: "web", "notes", "unisfair", "on24", "grp_import"  
	If( docEnrollment.Isnewnote ) Then
		docEnrollment.en_originCreated = "web"
	Else
		docEnrollment.en_originUpdated = "web"
	End If
	
	'Set flag for reporting module to pick up this registration
	docEnrollment.ad_isDirty = "true"
	
	'Store the server used to register
	docEnrollment.regserver = g_dbCurr.Server
	
	Set docEventProfile = docGetEventProfileByEventID(strEventID)
	
	'Get the event start date
	strEventStartDate = Format$(Cdat(docEventProfile.startmonth(0) &amp; "/" &amp; docEventProfile.startday(0) &amp; "/" &amp; docEventProfile.startyear(0) ), "MM/DD/YYYY")
	
	docEnrollment.ep_Status = docEventProfile.status(0)
	
	'If using the new web service for Notice and Choice we need to switch ISO code for Translated country name
	Dim strDB_NC_Type As String
	
	'Only change the ISO code if the N&amp;C web service can switch it, for Chinese|CN the country field is not used so keep en_country as hardcoded in CN subform.
	If docEnrollment.en_country_locale_lang(0) &lt;&gt; "" Then '  For now only canister flag   'strNC_Type = "WebService" And 
		docEnrollment.en_country = docEnrollment.en_country_locale_lang(0)
	End If
	
	'Check whether this event uses invitations and if it does, process the invitation.
	If (docEventProfile.ep_EnableInvitations(0) = "Yes") Then
		
		Call Debug(STR_MODULE_NAME &amp; |: This event uses an invitation process.|)	
		
		Dim flgUseInvitationCode As Boolean
		Dim flgUseInvitationEmail As Boolean
		Dim docInvitation As NotesDocument
		Dim strInvitationStatus As String
		Dim strResponseStatus As String
		
		'Find out what to use as the key to identify invitations
		Select Case docEventProfile.ep_InvitationIDType(0)
		Case |C|:
			Call Debug(STR_MODULE_NAME &amp; |: Using invitation ID as unique key.|)				
			flgUseInvitationCode = True
			'Get the invitation ID (if present)
			strInvID = docEnrollment.in_id(0)
			Call Debug(STR_MODULE_NAME &amp; |: Processing invitation with ID [| &amp; strInvID &amp; |]...|)					
		Case |E|:
			Call Debug(STR_MODULE_NAME &amp; |: Using invitation e-mail as unique key.|)		
			flgUseInvitationEmail = True
			'Get the invitation e-mail (if present)
			strInvEmail = docEnrollment.in_email(0)
			Call Debug(STR_MODULE_NAME &amp; |: Processing invitation with e-mail [| &amp; strInvEmail &amp; |]...|)					
		Case Else
			Error ERR_SYSTEM_ERROR, |An unknown value [| &amp; docEventProfile.ep_InvitationIDType(0) &amp; |] was found for the [ep_InvitationIDType] field in the event profile for event [| &amp; strEventID &amp; |].|	
		End Select
		
		'If an invitation ID/E-mail was supplied, it must be valid (whether or not this is an invitation only event)
		If ((flgUseInvitationCode And strInvID &lt;&gt; ||) Or (flgUseInvitationEmail And strInvEmail &lt;&gt; ||)) Then	
			
			'Check that an invitation exists for the supplied ID or E-mail
			If (flgUseInvitationCode) Then
				Set docInvitation = docGetInvitationByKey(strEventID, strInvID)
			Else
				Set docInvitation = docGetInvitationByEmail(strEventID, strInvEmail)
			End If
			
			If (docInvitation Is Nothing) Then
				If (flgUseInvitationCode) Then
					strURL = g_strWebPath &amp; |/noinvitationfound?OpenForm&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale &amp; |&amp;invid=| &amp; strInvID							
					Call Debug(STR_MODULE_NAME &amp; |: Invitation with invitation ID [| &amp; strInvID &amp; |] could not be found.  Redirecting to [| &amp; strURL &amp; |]|)		
					Call LogError(STR_MODULE_NAME &amp; |: Invitation with invitation ID [| &amp; strInvID &amp; |] for event ID [| &amp; strEventID &amp; |] could not be found.  Redirecting to [| &amp; strURL &amp; |]|)		
				Else
					strURL = g_strWebPath &amp; |/noinvitationfound?OpenForm&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale &amp; |&amp;invemail=| &amp; strInvEmail						
					Call Debug(STR_MODULE_NAME &amp; |: Invitation with invitation e-mail [| &amp; strInvEmail &amp; |] could not be found.  Redirecting to [| &amp; strURL &amp; |]|)		
					Call LogError(STR_MODULE_NAME &amp; |: Invitation with invitation e-mail [| &amp; strInvEmail &amp; |] for event ID [| &amp; strEventID &amp; |] could not be found.  Redirecting to [| &amp; strURL &amp; |]|)	
				End If
				Print |[| &amp; strURL &amp; |]|
				Goto lblExit
			Else
				If (flgUseInvitationCode) Then
					Call Debug(STR_MODULE_NAME &amp; |: Found invitation with invitation ID [| &amp; strInvID &amp; |].|)	
				Else
					Call Debug(STR_MODULE_NAME &amp; |: Found invitation with invitation e-mail [| &amp; strInvEmail &amp; |].|)	
				End If
			End If
			
			'The invitation exists, so check that it is in 'Invited' status
			strInvitationStatus = docInvitation.in_status(0)
			
			If (strInvitationStatus &lt;&gt; |Invited|) Then
				If (flgUseInvitationCode) Then
					strURL = g_strWebPath &amp; |/noinvitationfound?OpenForm&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale &amp; |&amp;invid=| &amp; strInvID							
					Call Debug(STR_MODULE_NAME &amp; |: Invitation with invitation ID [| &amp; strInvID &amp; |] was found but is NOT in 'Invited' status.  Redirecting to [| &amp; strURL &amp; |]|)		
					Call LogError(STR_MODULE_NAME &amp; |: Invitation with invitation ID [| &amp; strInvID &amp; |] for event ID [| &amp; strEventID &amp; |] was found but is NOT in 'Invited' status.  Redirecting to [| &amp; strURL &amp; |]|)		
				Else
					strURL = g_strWebPath &amp; |/noinvitationfound?OpenForm&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale &amp; |&amp;invemail=| &amp; strInvEmail
					Call Debug(STR_MODULE_NAME &amp; |: Invitation with invitation e-mail [| &amp; strInvEmail &amp; |] was found but is NOT in 'Invited' status.  Redirecting to [| &amp; strURL &amp; |]|)		
					Call LogError(STR_MODULE_NAME &amp; |: Invitation with invitation e-mail [| &amp; strInvEmail &amp; |] for event ID [| &amp; strEventID &amp; |] was found but is NOT in 'Invited' status.  Redirecting to [| &amp; strURL &amp; |]|)		
				End If
				Print |[| &amp; strURL &amp; |]|
				Goto lblExit
			Else
				Call Debug(STR_MODULE_NAME &amp; |: Invitation status is 'Invited'.|)	
			End If
			
			'The invitation status is 'Invited', so check whether the user has already responded, i.e. they are trying to accept the invitation a second time
			strResponseStatus = docInvitation.in_RSVPStatus(0)
			
			If (strResponseStatus = |Accepted|) Then
				'The invitation status is 'Accepted' so check whether the user has already registered and has a registration document
				If (flgAlreadyRegistered(docInvitation)) Then
					'The user already has a registration document, so show the duplicate registration message
					If (flgUseInvitationCode) Then
						strURL = g_strWebPath &amp; |/duplicatemsg?OpenForm&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale &amp; |&amp;invid=| &amp; strInvID	
						Call Debug(STR_MODULE_NAME &amp; |: Invitation with invitation ID [| &amp; strInvID &amp; |] was found, and the invitation status is 'Invited', but the invitation has already been accepted and an enrollment record already exists.  Redirecting to [| &amp; strURL &amp; |]|)		
						Call LogError(STR_MODULE_NAME &amp; |: Invitation with invitation ID [| &amp; strInvID &amp; |] for event ID [| &amp; strEventID &amp; |] is valid, and the invitation status is 'Invited', but the invitation has already been accepted and an enrollment record already exists.  Redirecting to [| &amp; strURL &amp; |]|)		
					Else
						strURL = g_strWebPath &amp; |/duplicatemsg?OpenForm&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale &amp; |&amp;invemail=| &amp; strInvEmail
						Call Debug(STR_MODULE_NAME &amp; |: Invitation with invitation e-mail [| &amp; strInvEmail &amp; |] was found, and the invitation status is 'Invited', but the invitation has already been accepted and an enrollment record already exists.  Redirecting to [| &amp; strURL &amp; |]|)		
						Call LogError(STR_MODULE_NAME &amp; |: Invitation with invitation e-mail [| &amp; strInvEmail &amp; |] for event ID [| &amp; strEventID &amp; |] is valid, and the invitation status is 'Invited', but the invitation has already been accepted and an enrollment record already exists.  Redirecting to [| &amp; strURL &amp; |]|)		
					End If			
					Print |[| &amp; strURL &amp; |]|
					Goto lblExit
				End If
			End If
			
			'We're here if:
			'- The invitation is valid and the user has already accepted but there is no existing registration document 
			'- The invitation is valid and the user has either not yet responded or has previously declined.
			
			'In either case, accept the registration
			Call Debug(STR_MODULE_NAME &amp; |: Invitation is valid.|)
			
			'Store the invitation ID and e-mail in the enrollment record
			If (flgUseInvitationCode) Then
				docEnrollment.in_id = strInvID
				docEnrollment.in_email = docInvitation.en_email(0)
			Else
				docEnrollment.in_email = strInvEmail
				docEnrollment.in_id = docInvitation.in_id(0)
			End If
			
			'Store the UNID of the invitation document in the enrollment record
			docEnrollment.in_UNID = docInvitation.UniversalID
			
			'Update the invitation and save it
			docInvitation.in_RSVPStatus = |Accepted|
			docInvitation.in_DateResponseReceived = Now()
			
			'Store the UNID of the enrollment document in the invitation record
			docInvitation.en_UNID = docEnrollment.UniversalID
			
			'Update the document history
			Call UpdateAudit(docInvitation, |System|, |Invitation accepted via web.|)		
			
			Call docInvitation.Save(True, False)
			
			Call Debug(STR_MODULE_NAME &amp; |: Invitation accepted.|)
			
		Else
			'There is no invitation ID, and this is an invitation ONLY event, then it's an error
			If (docEventProfile.ep_IsInvitationOnly(0) = "Yes") Then	
				If (flgUseInvitationCode) Then
					strURL = g_strWebPath &amp; |/noinvitationfound?OpenForm&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale &amp; |&amp;invid=| &amp; strInvID							
					Call Debug(STR_MODULE_NAME &amp; |: No invitation ID was supplied for an invitation ONLY event.  Redirecting to [| &amp; strURL &amp; |]|)		
					Call LogError(STR_MODULE_NAME &amp; |: No invitation ID was supplied for an invitation ONLY event.  Event ID [| &amp; strEventID &amp; |] .  Redirecting to [| &amp; strURL &amp; |]|)		
				Else
					strURL = g_strWebPath &amp; |/noinvitationfound?OpenForm&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale &amp; |&amp;invemail=| &amp; strInvEmail
					Call Debug(STR_MODULE_NAME &amp; |: No invitation e-mail was supplied for an invitation ONLY event.  Redirecting to [| &amp; strURL &amp; |]|)		
					Call LogError(STR_MODULE_NAME &amp; |: No invitation e-mail was supplied for an invitation ONLY event.  Event ID [| &amp; strEventID &amp; |] .  Redirecting to [| &amp; strURL &amp; |]|)						
				End If
				Print |[| &amp; strURL &amp; |]|
				Goto lblExit	
			End If
			
			Call Debug(STR_MODULE_NAME &amp; |: No invitation ID was supplied, but this is NOT an invitation ONLY event, so allow registration.|)	
		End If
		
	End If
	
	Dim result As Integer
	
	'This flag (dp_EnableON24) since the addition of Unisfair as an other vendor simply check if this is a virtual event 
	'Not simply if it is ran by ON24. the new flag to differentiate the 2 is "ep_VirtualVendor"
	Call Debug(STR_MODULE_NAME &amp; |: docEventProfile.ep_IsON24: |&amp; docEventProfile.ep_IsON24(0)="Yes")
	If (docEventProfile.ep_IsON24(0)="Yes") Then			'g_docDbProfile.dp_EnableON24(0) = "Yes" &amp;
		
		Call Debug(STR_MODULE_NAME &amp; |: Canister is Vitual Event enabled.|)	
		
		Dim strRegistrationURL As String
		Dim strRegistrationPOSTURL As String
		Dim  strGetUrlData As String
		
		Dim jsession As New JavaSession
		Dim jclass As JavaClass
		Set jclass = jsession.GetClass("ON24API") ' Get the wrapper class and instantiate it
		Dim jobj As  JavaObject 
		Set jobj = jclass.createObject()
		
		'Check the Advance tab and Virtual Events Tab fields for correct values
		Call Debug(STR_MODULE_NAME &amp; |: docEventProfile.ep_VirtualVendor: |&amp; docEventProfile.ep_VirtualVendor(0))
		If (docEventProfile.ep_VirtualVendor(0) = "ON24") Then	
			'This is ON24
			'Only ping ON24 with reg data if we have both a Show Code and Show ID.
			Dim strShowCode As String
			Dim strShowID As String
			Dim strShowUrl As String
			Dim strShowPassword As String
			Dim strShowAPIKey As String
			
			strShowCode       =  Trim(docEventProfile.ep_ON24ShowCode(0))
			strShowID         =  Trim(docEventProfile.ep_ON24ShowID(0))
			strShowUrl        =  Trim(docEventProfile.ep_ON24ShowUrl(0))
			strShowPassword   =  Trim(docEventProfile.ep_ON24ShowPassword(0))
			strShowAPIKey     =  Trim(docEventProfile.ep_ON24APIKey(0))
			
			strGetUrlData = strGetUrlData + "&amp;apiMode=Y"
			strGetUrlData = strGetUrlData + "&amp;apiKey="     		+ strShowAPIKey
			strGetUrlData = strGetUrlData + "&amp;target="     		+ strShowUrl
			strGetUrlData = strGetUrlData + "&amp;email="     		+ docEnrollment.en_email(0)
			strGetUrlData = strGetUrlData + "&amp;password="  		+ strShowPassword 
			strGetUrlData = strGetUrlData + "&amp;firstName=" 		+ docEnrollment.en_first(0)
			strGetUrlData = strGetUrlData + "&amp;lastName="  		+ docEnrollment.en_last(0)  			
			strGetUrlData = strGetUrlData + "&amp;company="   		+ docEnrollment.en_companyname(0)
			strGetUrlData = strGetUrlData + "&amp;jobTitle="  		+ docEnrollment.en_title(0) 
			strGetUrlData = strGetUrlData + "&amp;jobFunction="     	+ docEnrollment.en_prefix(0)
			strGetUrlData = strGetUrlData + "&amp;addressStreet1="  	+ docEnrollment.en_mailstreet1(0)
			strGetUrlData = strGetUrlData + "&amp;addressStreet2="  	+ docEnrollment.en_mailstreet2(0)
			strGetUrlData = strGetUrlData + "&amp;city="  			+ docEnrollment.en_city(0) 
			strGetUrlData = strGetUrlData + "&amp;state=" 			+ docEnrollment.en_state(0)
			strGetUrlData = strGetUrlData + "&amp;zip="  			+ docEnrollment.en_zip(0)
			strGetUrlData = strGetUrlData + "&amp;country="  		+ docEnrollment.en_country(0)
			strGetUrlData = strGetUrlData + "&amp;workPhone="  		+ docEnrollment.en_phone(0)
			strGetUrlData = strGetUrlData + "&amp;std1="  			+ docEnrollment.en_attendeetype(0)
			If docEnrollment.privacyno(0) = "" Then ' If second question is uncheked then set to Y
				strGetUrlData = strGetUrlData +  "&amp;marketingEmail="  	+ "Y"
			Else
				strGetUrlData = strGetUrlData +  "&amp;marketingEmail="  	+ "N"
			End If
			
			strGetUrlData = strGetUrlData +  "&amp;regPageCode="  	+ docEnrollment.eventid(0) ' grpeventid			
			
			Call Debug(STR_MODULE_NAME &amp; |: ON24 Show Code [| &amp; strShowCode &amp; |].|)	
			Call Debug(STR_MODULE_NAME &amp; |: ON24 Show ID   [| &amp; strShowID   &amp; |].|)	
			Call Debug(STR_MODULE_NAME &amp; |: ON24 Show Url  [| &amp; strShowUrl  &amp; |].|)
			
			strRegistrationPOSTURL = "https://vshow.on24.com/vshow/"+ strShowCode  + "/register?"
			
			If strShowID &lt;&gt; "" And strShowCode &lt;&gt; "" Then
				'If present save the ON24 info in the individual regs
				docEnrollment.ep_ON24ShowCode = strShowCode
				docEnrollment.ep_ON24ShowID   = strShowID
				
				Call Debug(STR_MODULE_NAME &amp; |: Calling ON24 API [| &amp; strGetUrlData &amp; |].|)	
				
				'result = jobj.sendRegDataToON24(strGetUrlData)
				result = jobj.sendRegDataToON24(strRegistrationPOSTURL, strGetUrlData)
				Dim strError As String
				strError = jobj.getError()
				Call Debug(STR_MODULE_NAME &amp; |: ON24 Return Message [| &amp; strError &amp; |].|)
				docEnrollment.en_ON24_ReturnMsg = strError
				If (result = 1) Then
					Call Debug(STR_MODULE_NAME &amp; |: Successfully registered with ON24.|)	
					docEnrollment.en_DateON24Registered = Now()		
				Else
					Call Debug(STR_MODULE_NAME &amp; |: Unable to register with ON24.|)
					docEnrollment.en_DateON24Registered = "Failled"
					Call LogError(STR_MODULE_NAME &amp; | Unable to register with ON24 for Event ID: | +  docEnrollment.eventid(0) + " and e-mail: " + + docEnrollment.en_email(0))
					
				End If
			Else
				Call Debug(STR_MODULE_NAME &amp; |: No  ON24 Show code or ID |)
			End If
			
		Elseif (docEventProfile.ep_VirtualVendor(0) = "Unisfair") Then	
			
			'This is Unisfair's query parameter string build
			strGetUrlData = strGetUrlData + "eid="                  + docEventProfile.ep_UnisfairEventID(0) '602
			strGetUrlData = strGetUrlData + "&amp;seid=" 			    + docEventProfile.ep_UnisfairEventSubID(0) '45
			strGetUrlData = strGetUrlData + "&amp;unisfair_first_name=" + docEnrollment.en_first(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_last_name="  + docEnrollment.en_last(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_email="      + docEnrollment.en_email(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_company="    + docEnrollment.en_companyname(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_other1="  	+ docEnrollment.en_title(0) 			
			strGetUrlData = strGetUrlData + "&amp;unisfair_other3="     + docEnrollment.en_prefix(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_address1="   + docEnrollment.en_mailstreet1(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_address2="   + docEnrollment.en_mailstreet2(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_city="  	    + docEnrollment.en_city(0) 
			strGetUrlData = strGetUrlData + "&amp;unisfair_other4="     + docEnrollment.en_state(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_zip="  	    + docEnrollment.en_zip(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_other2="  	+ docEnrollment.en_country(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_phone="  	+ docEnrollment.en_phone(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_phone2="     + docEnrollment.en_CanisterID(0)
			strGetUrlData = strGetUrlData + "&amp;unisfair_generate_password=true"
			strGetUrlData = strGetUrlData + "&amp;unisfair_fax="	    + docEnrollment.eventid(0) ' grpeventid
			
			Dim strAttendeeType As String
			If (docEnrollment.en_attendeetype(0)="Customer/Delegate")Then
				strAttendeeType = 1				
			Elseif(docEnrollment.en_attendeetype(0)="Business Partner") Then
				strAttendeeType = 30
			Elseif(docEnrollment.en_attendeetype(0)="IBM Executive") Then
				strAttendeeType = 31
			Elseif(docEnrollment.en_attendeetype(0)="IBM Employee") Then
				strAttendeeType = 32		
			Elseif(docEnrollment.en_attendeetype(0)="Vendor Staff") Then
				strAttendeeType = 33
			Elseif(docEnrollment.en_attendeetype(0)="Press/Analyst") Then
				strAttendeeType = 36
			Elseif(docEnrollment.en_attendeetype(0)="Speaker") Then
				strAttendeeType = 37
			Elseif(docEnrollment.en_attendeetype(0)="Academic") Then
				strAttendeeType = 38
			End If			
			
			strGetUrlData = strGetUrlData + "&amp;unisfair_employees="	 + strAttendeeType
			
			'strRegistrationPOSTURL = "http://events.qa.unisfair.com/fastAccess.jsp"
			strRegistrationPOSTURL = "https://events.unisfair.com/fastAccess.jsp"
			
			If docEnrollment.en_CanisterID(0) &lt;&gt; ""  Then
				'If present save the ON24 info in the individual regs
				docEnrollment.ep_UnisfairEID    = docEventProfile.ep_UnisfairEventID(0)
				docEnrollment.ep_UnisfairSEID   = docEventProfile.ep_UnisfairEventSubID(0)
				
				Call Debug(STR_MODULE_NAME &amp; |: Calling Unisfair API [| &amp; strGetUrlData &amp; |].|)	
				
				result = jobj.sendRegDataToON24(strRegistrationPOSTURL, strGetUrlData)
				
				If (result = 1) Then
					Call Debug(STR_MODULE_NAME &amp; |: Successfully registered with Unisfair.|)	
					docEnrollment.en_DateUnisfairRegistered = Now()		
				Else
					Call Debug(STR_MODULE_NAME &amp; |: Unable to register with Unisfair.|)
					docEnrollment.en_DateUnisfairRegistered = "Failled"
				End If
			Else
				Call Debug(STR_MODULE_NAME &amp; |: No Unisfair Event ID |)
			End If
		End If		
		
	End If
	
	strURL = g_strWebPath &amp; |/confirmationmsg.xsp?open&amp;seminar=| &amp; strEventID &amp; |&amp;locale=| &amp; strLocale &amp; |&amp;rid=| &amp; docEnrollment.regid(0)
	If (strInvID &lt;&gt; ||) Then
		strURL = strURL &amp; |&amp;invid=| &amp; strInvID
	End If
	If (strInvEmail &lt;&gt; ||) Then
		strURL = strURL &amp; |&amp;invemail=| &amp; strInvEmail
	End If
	strURL = strURL &amp; |&amp;msg=msgc|
	
	'For CTEBA enabled events also pass the regid
	If (g_docDbProfile.HasItem(|dp_EnableCTEBA|) And docEventProfile.HasItem(|ep_ShowCTEBA|)) Then
		If (Cstr(g_docDbProfile.dp_EnableCTEBA(0)) = |Yes| And Cint(docEventProfile.ep_ShowCTEBA(0)) = 1) Then
			strURL = strURL &amp; |&amp;regid=| &amp; docEnrollment.regid(0)
			Select Case docEnrollment.en_payment_method(0)
			Case |Credit card|:
				strURL = strURL &amp; |&amp;method=cc|
			Case |Alternate payment method|:
				strURL = strURL &amp; |&amp;method=alt|	
		End Select
		End If
	End If
	
	Call Debug(STR_MODULE_NAME &amp; |: Redirecting to [| &amp; strURL &amp; |].|)	
	Print |[| &amp; strURL &amp; |]|
	
	'Translate any locale specific information into English
	Call TranslateLocaleSpecificInfo(strLocale, docEnrollment)
	
	'Check whether an MI question set has been chosen
	strQuestionSetID = Cstr(docEventProfile.MIQuestionSet(0))
	
	'Store the English (Worldwide) text of the MI questions (so that we can display it in the views)
	Set docMIQuestionSetLookup = docGetMIQuestionSetLookup(strQuestionSetID, |en_ZZ|)
	
	If (Not docMIQuestionSetLookup Is Nothing) Then
		For intCurrQuestion = 1 To 10
			Call GetMIQuestionLocalization(intCurrQuestion, docEventProfile, docMIQuestionSetLookup, docEnrollment, strScript)
		Next
	End If
	
	'1/16/2018, David Holbrook - Set the 'en_city' field to what was picked in the 'en_state' field
	Set item = docEnrollment.ReplaceItemValue("en_city", docEnrollment.en_state(0))
	Set item = docEnrollment.ReplaceItemValue("en_state", "")
	
	If (flgIsEmailEnabled(docEventProfile, INT_EMAIL_CONFIRMATION)) Then
		' Set some values first, which might help in creating merge field data for sessions
		Set doc_regProfile = getRegistrationProfile(docEventProfile, strLocale)
		If doc_regProfile Is Nothing Then
			Call LogError(STR_MODULE_NAME &amp; |: Registration profile (Event ID:| &amp; docEventProfile.ep_id(0) &amp;|) for locale:| &amp; strLocale &amp; | not found.|)
			Goto lblExit
		End If
		docEnrollment.rp_numdays = doc_regProfile.rp_numdays(0)
		docEnrollment.rp_sessions_sectiontitle = doc_regProfile.rp_sessions_sectiontitle(0)
		For d = 1 To Cint(doc_regProfile.rp_numdays(0))
			strKey = doc_regProfile.ep_id(0) &amp; doc_regProfile.Locale(0) + "/" + Cstr(d)
			Set item = docEnrollment.ReplaceItemValue("sessionKey" &amp; Cstr(d), strKey)
		Next
		
		' Now we are ready to create the E-mail
		Set docEmailTemplate = docGetEmailTemplate(INT_EMAIL_CONFIRMATION, docEventProfile, docEnrollment)
		Set myMerger = InitMergeGenerator(g_dbCurr, True, "Registration")
		Dim mailDoc As NotesDocument
		Set mailDoc = myMerger.docCreateFormattedEMail(docEnrollment, docEmailTemplate)
		'Call mailDoc.Save(False, False)
		If Not (mailDoc.Save(False, False)) Then
			Error ERR_SYSTEM_ERROR, |E-mail not sent for event [| &amp; Cstr(docEventProfile.eventname(0)) &amp; |] with start date [| &amp; strEventStartDate &amp; |].  An error occurred when attempting to send e-mail to [| &amp; Cstr(docEnrollment.en_email(0)) &amp; |].|
		Else
			strEmailType = Cstr(docEmailTemplate.mt_Category(0))
			
			Select Case strEmailType
				
			Case |Confirmation|:
				Set item = docEnrollment.Replaceitemvalue("en_DateConfirmationEmailSent", Now())
				
			Case |Reminder|:
				Set item = docEnrollment.Replaceitemvalue("en_DateReminderEmailSent", Now())
				
			Case |Followup|:
				Set item = docEnrollment.Replaceitemvalue("en_DateFollowupEmailSent", Now())
				
			Case |Event Cancellation|:
				Set item = docEnrollment.Replaceitemvalue("en_DateCancellationEmailSent", Now())
				
			Case |Invitation|:
				Set item = docEnrollment.Replaceitemvalue("in_DateInvitationEmailSent", Now())
				
				'For invitations, change the invitation status to 'Invited' and add a timestamp
				Set item = docEnrollment.Replaceitemvalue("in_Status", |Invited|)
				Set item = docEnrollment.Replaceitemvalue("in_DateInvited", Now())
				
			Case |Other|:
				Set item = docEnrollment.Replaceitemvalue("en_DateOtherEmailSent", Now())
				
			Case Else
				Error ERR_SYSTEM_ERROR, |An unknown e-mail type [| &amp; strEmailType &amp; |] was supplied to the function.|	
				
			End Select
		End If
		
		Call docEnrollment.Save(True, False)
		
	End If
	
lblExit:
	
	Call Debug(STR_MODULE_NAME &amp; |: Finished.|)
	
	Exit Sub
	
lblError:
	
	Call Debug(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Call LogError(STR_MODULE_NAME &amp; |: | &amp; Err() &amp; |: | &amp; Error() &amp; | in line | &amp; Erl)
	Resume lblExit
	
End Sub</lotusscript></code>
<rundata processeddocs='0' exitcode='0'>
<agentmodified><datetime>20190116T194705,09-06</datetime></agentmodified></rundata>
<item name='$POID'><datetime>20160309T165347,00-06</datetime></item></agent>

